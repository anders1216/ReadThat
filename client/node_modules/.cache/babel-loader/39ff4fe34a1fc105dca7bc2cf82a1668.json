{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/MainPage.jsx\";\nimport React, { Component } from 'react';\nimport Login from '../components/forms/Login';\nimport Feed from './Feed';\nimport NewUser from '../components/forms/NewUser';\nimport { userLogin, userLogout, newUser, pageReload } from '../actions/userActions';\nimport { connect } from 'react-redux'; // import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport history from '../history';\nexport const API = 'http://localhost:3000/';\n\nclass MainPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      password: '',\n      passwordConfirmation: '',\n      username: '',\n      isNewUser: false // token: null,\n      // isLoggedIn: false,\n      // currentUser: null\n\n    };\n\n    this.logOut = () => {\n      this.props.userLogout();\n    };\n\n    this.handleChange = e => {\n      let key = e.target.name;\n      let newState = e.target.value;\n      this.setState({\n        [key]: newState\n      });\n    };\n\n    this.onNewUserSubmit = async e => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password,\n            passwordConfirmation = _this$state.passwordConfirmation;\n      e.preventDefault();\n      await this.props.newUser(username, password, passwordConfirmation);\n      this.setState({\n        password: '',\n        passwordConfirmation: ''\n      });\n      localStorage.setItem('user-token', this.props.token); // const { username, password, passwordConfirmation } = this.state;\n      // e.preventDefault();\n      // fetch(API + 'users', {\n      // \tmethod: 'POST',\n      // \theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n      // \tbody: JSON.stringify({\n      // \t\tuser: {\n      // \t\t\tusername: username,\n      // \t\t\tpassword: password,\n      // \t\t\tpassword_confirmation: passwordConfirmation\n      // \t\t}\n      // \t})\n      // })\n      // \t.then(res => res.json())\n      // \t.then(res => {\n      // \t\tres.error\n      // \t\t\t? alert(res.error)\n      // \t\t\t: this.setState({\n      // \t\t\t\t\tcurrentUser: res,\n      // \t\t\t\t\tisLoggedIn: true,\n      // \t\t\t\t\ttoken: res.token,\n      // \t\t\t\t\tpassword: '',\n      // \t\t\t\t\tpasswordConfirmation: ''\n      // \t\t\t  });\n      // \t})\n      // \t.then(res => localStorage.setItem('user-token', this.state.token));\n    };\n\n    this.onLoginSubmit = async e => {\n      const _this$state2 = this.state,\n            username = _this$state2.username,\n            password = _this$state2.password;\n      e.preventDefault();\n      this.props.userLogin(username, password);\n      this.setState({\n        username: '',\n        password: ''\n      });\n      localStorage.setItem('user-token', this.props.token); // const { username, password } = this.state;\n      // e.preventDefault();\n      // await fetch(API + 'login', {\n      // \tmethod: 'POST',\n      // \theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n      // \tbody: JSON.stringify({ user: { username: username, password: password } })\n      // })\n      // \t.then(res => res.json())\n      // \t.then(res => {\n      // \t\tres.errors ? \n      // \t\talert(res.errors)\n      // \t\t:\n      // \t\tthis.setState({\n      // \t\t\tcurrentUser: res,\n      // \t\t\tisLoggedIn: true,\n      // \t\t\ttoken: res.token,\n      // \t\t\tpassword: '',\n      // \t\t\tpasswordConfirmation: ''\n      // \t\t})\n      // \t}\n      // \t)\n      // \tif(this.state.token !== null){\n      // \t\tlocalStorage.setItem('user-token', this.state.token);\n      // \t}\n    };\n\n    this.newUserModalHandler = () => {\n      this.setState({\n        isNewUser: true\n      });\n    };\n\n    this.conditionalRender = () => {\n      let Component;\n      const isLoggedIn = this.props.isLoggedIn;\n      const isNewUser = this.state.isNewUser;\n\n      if (!isLoggedIn) {\n        if (isNewUser) {\n          history.push('/new-user');\n          Component = React.createElement(NewUser, {\n            handleChange: this.handleChange,\n            onSubmit: this.onNewUserSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n        } else {\n          history.push('/login');\n          Component = React.createElement(Login, {\n            handleChange: this.handleChange,\n            onClick: this.newUserModalHandler,\n            onSubmit: this.onLoginSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          });\n        }\n      } else if (isLoggedIn) {\n        history.push('/feed');\n        Component = React.createElement(Feed // currentUser={currentUser} \n        // token={token} \n        // logOut={this.logOut} \n        , {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      } else {\n        history.push('/login');\n        Component = React.createElement(Login, {\n          handleChange: this.handleChange,\n          onClick: this.newUserModalHandler,\n          onSubmit: this.onLoginSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        });\n      }\n\n      return Component;\n    };\n  }\n\n  componentDidMount() {\n    this.props.pageReload(); // if(localStorage.getItem('user-token') !== \"undefined\" && localStorage.getItem('user-token') !== null) {\n    // \tfetch(`${API}users/current_user`, {\n    // \t\theaders: {\n    // \t\t'Authorization': `Bearer ${localStorage.getItem('user-token')}`,\n    // \t\t'Content-Type': 'application/json',\n    // \t\tAccept: 'application/json'}\n    // \t})\n    // \t.then(res => res.json())\n    // \t.then(res => dispatch({currentUser: res, isLoggedIn: true, token: res.token}))\n    // }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.conditionalRender());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.user.isLoggedIn,\n  token: state.user.token\n});\n\nexport default connect(mapStateToProps, {\n  userLogin,\n  userLogout,\n  newUser,\n  pageReload\n})(MainPage);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/MainPage.jsx"],"names":["React","Component","Login","Feed","NewUser","userLogin","userLogout","newUser","pageReload","connect","history","API","MainPage","state","input","password","passwordConfirmation","username","isNewUser","logOut","props","handleChange","e","key","target","name","newState","value","setState","onNewUserSubmit","preventDefault","localStorage","setItem","token","onLoginSubmit","newUserModalHandler","conditionalRender","isLoggedIn","push","componentDidMount","render","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Login from '../components/forms/Login';\nimport Feed from './Feed';\nimport NewUser from '../components/forms/NewUser';\nimport { userLogin, userLogout, newUser, pageReload } from '../actions/userActions'\nimport { connect } from 'react-redux'\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport history from '../history';\n\nexport const API = 'http://localhost:3000/';\n\nclass MainPage extends Component {\n\tstate = {\n\t\tinput: '',\n\t\tpassword: '',\n\t\tpasswordConfirmation: '',\n\t\tusername: '',\n\t\tisNewUser: false,\n\t\t// token: null,\n\t\t// isLoggedIn: false,\n\t\t// currentUser: null\n\t};\n\n\tcomponentDidMount(){\n\t\tthis.props.pageReload()\n\t\t// if(localStorage.getItem('user-token') !== \"undefined\" && localStorage.getItem('user-token') !== null) {\n\t\t// \tfetch(`${API}users/current_user`, {\n\t\t// \t\theaders: {\n\t\t// \t\t'Authorization': `Bearer ${localStorage.getItem('user-token')}`,\n\t\t// \t\t'Content-Type': 'application/json',\n\t\t// \t\tAccept: 'application/json'}\n\t\t// \t})\n\t\t// \t.then(res => res.json())\n\t\t// \t.then(res => dispatch({currentUser: res, isLoggedIn: true, token: res.token}))\n\t\t// }\n\t}\n\n\tlogOut = () => {\n\t\tthis.props.userLogout()\n\t}\n\n\thandleChange = e => {\n\t\tlet key = e.target.name;\n\t\tlet newState = e.target.value;\n\t\tthis.setState({ [key]: newState });\n\t};\n\n\tonNewUserSubmit = async (e) => {\n\t\tconst { username, password, passwordConfirmation } = this.state;\n\t\te.preventDefault();\n\t\tawait this.props.newUser( username, password, passwordConfirmation)\n\t\tthis.setState({\n\t\t\tpassword: '',\n\t\t\tpasswordConfirmation: ''\n\t\t})\n\t\tlocalStorage.setItem('user-token', this.props.token)\n\n\t\t// const { username, password, passwordConfirmation } = this.state;\n\t\t// e.preventDefault();\n\t\t// fetch(API + 'users', {\n\t\t// \tmethod: 'POST',\n\t\t// \theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n\t\t// \tbody: JSON.stringify({\n\t\t// \t\tuser: {\n\t\t// \t\t\tusername: username,\n\t\t// \t\t\tpassword: password,\n\t\t// \t\t\tpassword_confirmation: passwordConfirmation\n\t\t// \t\t}\n\t\t// \t})\n\t\t// })\n\t\t// \t.then(res => res.json())\n\t\t// \t.then(res => {\n\t\t// \t\tres.error\n\t\t// \t\t\t? alert(res.error)\n\t\t// \t\t\t: this.setState({\n\t\t// \t\t\t\t\tcurrentUser: res,\n\t\t// \t\t\t\t\tisLoggedIn: true,\n\t\t// \t\t\t\t\ttoken: res.token,\n\t\t// \t\t\t\t\tpassword: '',\n\t\t// \t\t\t\t\tpasswordConfirmation: ''\n\t\t// \t\t\t  });\n\t\t// \t})\n\t\t// \t.then(res => localStorage.setItem('user-token', this.state.token));\n\t};\n\n\tonLoginSubmit = async (e) => {\n\t\tconst { username, password } = this.state\n\t\te.preventDefault();\n\t\tthis.props.userLogin( username, password )\n\t\tthis.setState({\n\t\t\tusername: '',\n\t\t\tpassword: ''\n\t\t})\n\t\tlocalStorage.setItem('user-token', this.props.token);\n\t\t// const { username, password } = this.state;\n\t\t// e.preventDefault();\n\t\t// await fetch(API + 'login', {\n\t\t// \tmethod: 'POST',\n\t\t// \theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n\t\t// \tbody: JSON.stringify({ user: { username: username, password: password } })\n\t\t// })\n\t\t// \t.then(res => res.json())\n\t\t// \t.then(res => {\n\t\t// \t\tres.errors ? \n\t\t// \t\talert(res.errors)\n\t\t// \t\t:\n\t\t// \t\tthis.setState({\n\t\t// \t\t\tcurrentUser: res,\n\t\t// \t\t\tisLoggedIn: true,\n\t\t// \t\t\ttoken: res.token,\n\t\t// \t\t\tpassword: '',\n\t\t// \t\t\tpasswordConfirmation: ''\n\t\t// \t\t})\n\t\t// \t}\n\t\t// \t)\n\t\t// \tif(this.state.token !== null){\n\t\t// \t\tlocalStorage.setItem('user-token', this.state.token);\n\t\t// \t}\n\t};\n\n\tnewUserModalHandler = () => {\n\t\tthis.setState({ isNewUser: true });\n\t};\n\n\tconditionalRender = () => {\n\t\tlet Component;\n\t\tconst { isLoggedIn } = this.props;\n\t\tconst { isNewUser } = this.state\n\t\tif (!isLoggedIn) {\n\t\t\tif (isNewUser) {\n\t\t\t\thistory.push('/new-user');\n\t\t\t\tComponent = <NewUser \n\t\t\t\t\thandleChange={this.handleChange} \n\t\t\t\t\tonSubmit={this.onNewUserSubmit} />;\n\t\t\t} else {\n\t\t\t\thistory.push('/login');\n\t\t\t\tComponent = (\n\t\t\t\t\t<Login\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tonClick={this.newUserModalHandler}\n\t\t\t\t\t\tonSubmit={this.onLoginSubmit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (isLoggedIn){\n\t\t\thistory.push('/feed');\n\t\t\tComponent = <Feed \n\t\t\t\t// currentUser={currentUser} \n\t\t\t\t// token={token} \n\t\t\t\t// logOut={this.logOut} \n\t\t\t/>;\n\t\t} else {\n\t\t\thistory.push('/login');\n\t\t\tComponent = (\n\t\t\t\t<Login\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tonClick={this.newUserModalHandler}\n\t\t\t\t\tonSubmit={this.onLoginSubmit}\n\t\t\t\t/>\n\t\t\t)}\n\t\treturn Component;\n\t};\n\n\trender() {\n\t\treturn <div className='main-container'>{this.conditionalRender()}</div>;\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tisLoggedIn: state.user.isLoggedIn,\n\ttoken: state.user.token\n})\n\nexport default connect(mapStateToProps, { userLogin, userLogout, newUser, pageReload })(MainPage)\n\n"]},"metadata":{},"sourceType":"module"}