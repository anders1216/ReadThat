{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/MainPage.jsx\";\nimport React, { Component } from 'react';\nimport Login from '../components/forms/Login';\nimport Feed from './Feed';\nimport NewUser from '../components/forms/NewUser'; // import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport history from '../history';\nexport const API = 'http://localhost:3000/';\nexport default class MainPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      password: '',\n      passwordConfirmation: '',\n      username: '',\n      token: null,\n      isLoggedIn: false,\n      isNewUser: false,\n      currentUser: null\n    };\n\n    this.logOut = () => {\n      localStorage.clear();\n      this.setState({\n        isLoggedIn: false\n      });\n    };\n\n    this.handleChange = e => {\n      let key = e.target.name;\n      let newState = e.target.value;\n      this.setState({\n        [key]: newState\n      });\n    };\n\n    this.onNewUserSubmit = e => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password,\n            passwordConfirmation = _this$state.passwordConfirmation;\n      e.preventDefault();\n      fetch(API + 'users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n            password_confirmation: passwordConfirmation\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        res.error ? alert(res.error) : this.setState({\n          currentUser: res,\n          isLoggedIn: true,\n          token: res.token,\n          password: '',\n          passwordConfirmation: ''\n        });\n      }).then(res => localStorage.setItem('user-token', this.state.token));\n    };\n\n    this.onLoginSubmit = async e => {\n      const _this$state2 = this.state,\n            username = _this$state2.username,\n            password = _this$state2.password;\n      e.preventDefault();\n      await fetch(API + 'login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        res.errors ? alert(res.errors) : this.setState({\n          currentUser: res,\n          isLoggedIn: true,\n          token: res.token,\n          password: '',\n          passwordConfirmation: ''\n        });\n      });\n\n      if (this.state.token !== null) {\n        localStorage.setItem('user-token', this.state.token);\n      }\n    };\n\n    this.newUserClickHandler = () => {\n      this.setState({\n        isNewUser: true\n      });\n    };\n\n    this.conditionalRender = () => {\n      console.log('MainPage');\n      let Component;\n      const _this$state3 = this.state,\n            isLoggedIn = _this$state3.isLoggedIn,\n            isNewUser = _this$state3.isNewUser,\n            currentUser = _this$state3.currentUser,\n            token = _this$state3.token;\n\n      if (!isLoggedIn) {\n        if (isNewUser) {\n          history.push('/new-user');\n          Component = React.createElement(NewUser, {\n            handleChange: this.handleChange,\n            onSubmit: this.onNewUserSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          });\n        } else {\n          history.push('/login');\n          Component = React.createElement(Login, {\n            handleChange: this.handleChange,\n            onClick: this.newUserClickHandler,\n            onSubmit: this.onLoginSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          });\n        }\n      } else if (isLoggedIn) {\n        history.push('/feed');\n        Component = React.createElement(Feed, {\n          currentUser: currentUser,\n          token: token,\n          logOut: this.logOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n      } else {\n        history.push('/login');\n        Component = React.createElement(Login, {\n          handleChange: this.handleChange,\n          onClick: this.newUserClickHandler,\n          onSubmit: this.onLoginSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        });\n      }\n\n      return Component;\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user-token') !== \"undefined\" && localStorage.getItem('user-token') !== null) {\n      fetch(\"\".concat(API, \"users/current_user\"), {\n        headers: {\n          'Authorization': \"Bearer \".concat(localStorage.getItem('user-token')),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        }\n      }).then(res => res.json()).then(res => this.setState({\n        currentUser: res,\n        isLoggedIn: true,\n        token: res.token\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.conditionalRender());\n  }\n\n}","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/MainPage.jsx"],"names":["React","Component","Login","Feed","NewUser","history","API","MainPage","state","input","password","passwordConfirmation","username","token","isLoggedIn","isNewUser","currentUser","logOut","localStorage","clear","setState","handleChange","e","key","target","name","newState","value","onNewUserSubmit","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","user","password_confirmation","then","res","json","error","alert","setItem","onLoginSubmit","errors","newUserClickHandler","conditionalRender","console","log","push","componentDidMount","getItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Login from '../components/forms/Login';\nimport Feed from './Feed';\nimport NewUser from '../components/forms/NewUser';\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport history from '../history';\n\nexport const API = 'http://localhost:3000/';\n\nexport default class MainPage extends Component {\n\tstate = {\n\t\tinput: '',\n\t\tpassword: '',\n\t\tpasswordConfirmation: '',\n\t\tusername: '',\n\t\ttoken: null,\n\t\tisLoggedIn: false,\n\t\tisNewUser: false,\n\t\tcurrentUser: null\n\t};\n\n\tcomponentDidMount(){\n\t\tif(localStorage.getItem('user-token') !== \"undefined\" && localStorage.getItem('user-token') !== null) {\n\t\t\tfetch(`${API}users/current_user`, {\n\t\t\t\theaders: {\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem('user-token')}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json'}\n\t\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => this.setState({currentUser: res, isLoggedIn: true, token: res.token}))\n\t\t}\n\t}\n\n\tlogOut = () => {\n\t\tlocalStorage.clear()\n\t\tthis.setState({isLoggedIn: false})\n\t}\n\n\thandleChange = e => {\n\t\tlet key = e.target.name;\n\t\tlet newState = e.target.value;\n\t\tthis.setState({ [key]: newState });\n\t};\n\n\tonNewUserSubmit = e => {\n\t\tconst { username, password, passwordConfirmation } = this.state;\n\t\te.preventDefault();\n\t\tfetch(API + 'users', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuser: {\n\t\t\t\t\tusername: username,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tpassword_confirmation: passwordConfirmation\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tres.error\n\t\t\t\t\t? alert(res.error)\n\t\t\t\t\t: this.setState({\n\t\t\t\t\t\t\tcurrentUser: res,\n\t\t\t\t\t\t\tisLoggedIn: true,\n\t\t\t\t\t\t\ttoken: res.token,\n\t\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\t\tpasswordConfirmation: ''\n\t\t\t\t\t  });\n\t\t\t})\n\t\t\t.then(res => localStorage.setItem('user-token', this.state.token));\n\t};\n\n\tonLoginSubmit = async (e) => {\n\t\tconst { username, password } = this.state;\n\t\te.preventDefault();\n\t\tawait fetch(API + 'login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n\t\t\tbody: JSON.stringify({ user: { username: username, password: password } })\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tres.errors ? \n\t\t\t\talert(res.errors)\n\t\t\t\t:\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUser: res,\n\t\t\t\t\tisLoggedIn: true,\n\t\t\t\t\ttoken: res.token,\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tpasswordConfirmation: ''\n\t\t\t\t})\n\t\t\t}\n\t\t\t)\n\t\t\tif(this.state.token !== null){\n\t\t\t\tlocalStorage.setItem('user-token', this.state.token);\n\t\t\t}\n\t};\n\t//\n\n\tnewUserClickHandler = () => {\n\t\tthis.setState({ isNewUser: true });\n\t};\n\n\tconditionalRender = () => {\n\t\tconsole.log('MainPage');\n\t\tlet Component;\n\t\tconst { isLoggedIn, isNewUser, currentUser, token } = this.state;\n\t\tif (!isLoggedIn) {\n\t\t\tif (isNewUser) {\n\t\t\t\thistory.push('/new-user');\n\t\t\t\tComponent = <NewUser handleChange={this.handleChange} onSubmit={this.onNewUserSubmit} />;\n\t\t\t} else {\n\t\t\t\thistory.push('/login');\n\t\t\t\tComponent = (\n\t\t\t\t\t<Login\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tonClick={this.newUserClickHandler}\n\t\t\t\t\t\tonSubmit={this.onLoginSubmit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (isLoggedIn){\n\t\t\thistory.push('/feed');\n\t\t\tComponent = <Feed currentUser={currentUser} token={token} logOut={this.logOut} />;\n\t\t} else {\n\t\t\thistory.push('/login');\n\t\t\t\tComponent = (\n\t\t\t\t\t<Login\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tonClick={this.newUserClickHandler}\n\t\t\t\t\t\tonSubmit={this.onLoginSubmit}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\treturn Component;\n\t};\n\n\trender() {\n\t\treturn <div className='main-container'>{this.conditionalRender()}</div>;\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}