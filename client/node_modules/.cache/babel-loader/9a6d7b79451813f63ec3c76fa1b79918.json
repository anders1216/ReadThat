{"ast":null,"code":"import _objectSpread from \"/Users/andershornor/Class_Work/ReadThat1/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_VOTES, NEW_VOTE, VOTE_COUNT_POSTS, VOTE_COUNT_COMMENTS } from '../actions/types';\nconst initialState = {\n  votes: [],\n  voteCount: {\n    post: {},\n    comment: {}\n  }\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_VOTES:\n      return _objectSpread({}, state, {\n        votes: action.payload\n      });\n\n    case NEW_VOTE:\n      return _objectSpread({}, state, {\n        votes: action.payload.votes\n      });\n\n    case VOTE_COUNT_POSTS:\n      return _objectSpread({}, state, {\n        voteCount: {\n          post: action.payload\n        }\n      });\n\n    case VOTE_COUNT_COMMENTS:\n      return _objectSpread({}, state, {\n        voteCount: {\n          comment: action.payload\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/reducers/voteReducer.jsx"],"names":["FETCH_VOTES","NEW_VOTE","VOTE_COUNT_POSTS","VOTE_COUNT_COMMENTS","initialState","votes","voteCount","post","comment","state","action","type","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,gBAAhC,EAAkDC,mBAAlD,QAA4E,kBAA5E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,EADC;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAFM,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,WAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFlB;;AAIJ,SAAKX,QAAL;AACI,+BACOQ,KADP;AAEIJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAF1B;;AAIJ,SAAKH,gBAAL;AACI,+BACOO,KADP;AAEIH,QAAAA,SAAS,EAAE;AAACC,UAAAA,IAAI,EAAEG,MAAM,CAACE;AAAd;AAFf;;AAIJ,SAAKT,mBAAL;AACI,+BACOM,KADP;AAEIH,QAAAA,SAAS,EAAC;AAACE,UAAAA,OAAO,EAAEE,MAAM,CAACE;AAAjB;AAFd;;AAIJ;AACI,aAAOH,KAAP;AAtBR;AAwBH","sourcesContent":["import { FETCH_VOTES, NEW_VOTE, VOTE_COUNT_POSTS, VOTE_COUNT_COMMENTS} from '../actions/types'\n\nconst initialState = {\n    votes: [],\n    voteCount: {\n        post: {},\n        comment: {}\n    }\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case FETCH_VOTES:\n            return {\n                ...state,\n                votes: action.payload\n            }\n        case NEW_VOTE:\n            return {\n                ...state,\n                votes: action.payload.votes\n            }\n        case VOTE_COUNT_POSTS:\n            return {\n                ...state,\n                voteCount: {post: action.payload}\n            }\n        case VOTE_COUNT_COMMENTS:\n            return {\n                ...state,\n                voteCount:{comment: action.payload}\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}