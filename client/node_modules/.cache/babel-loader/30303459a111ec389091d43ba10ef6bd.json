{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx\";\nimport React, { Component } from 'react';\nimport User from '../components/User'; // import { API } from './MainPage';\n\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories } from '../actions/categoryActions';\nimport { fetchVotes, createVote } from '../actions/voteActions';\nimport { fetchPosts } from '../actions/postActions';\nimport { connect } from 'react-redux';\nimport { voteCount } from '../actions/voteActions';\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      downVoteCount: 0,\n      postsFilter: [],\n      filterBool: false,\n      howToFilterBool: false,\n      updateBool: false,\n      rapidVoteCount: null\n    };\n\n    this.handleChange = async newSelection => {\n      await this.props.selectCategories(newSelection);\n      await this.props.fetchPosts();\n    };\n\n    this.handleSelect = async () => {\n      await this.props.fetchPosts();\n    };\n\n    this.filterPosts = async () => {\n      console.log(\"Filter Posts\");\n      const _this$props = this.props,\n            selectedPosts = _this$props.selectedPosts,\n            posts = _this$props.posts,\n            countedVotes = _this$props.countedVotes;\n      let keys = Object.keys(countedVotes);\n      keys.sort((a, b) => {\n        return countedVotes[a] - countedVotes[b];\n      });\n      let filteredPosts = keys.map(key => {\n        return {\n          [key]: countedVotes[key]\n        };\n      });\n      filteredPosts.reverse();\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchCategories();\n    await this.props.fetchVotes();\n    await this.props.fetchPosts();\n    await this.props.voteCount();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          currentUser = _this$props2.currentUser,\n          selectedPosts = _this$props2.selectedPosts,\n          categories = _this$props2.categories,\n          posts = _this$props2.posts,\n          votes = _this$props2.votes;\n\n    if (this.props.posts.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleChange: this.handleChange,\n        handleSelect: this.handleSelect,\n        filterPosts: this.filterPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(User, {\n        currentUser: currentUser,\n        posts: posts,\n        votes: votes,\n        categories: categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, selectedPosts.length > 0 ? selectedPosts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }) : posts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleSelect: this.handleSelect,\n        updatePosts: this.updatePosts,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"lodaing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Loading Posts...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.posts,\n  selectedPosts: state.posts.selectedPosts,\n  votes: state.votes.votes,\n  countedVotes: state.votes.voteCount\n});\n\nexport default connect(mapStateToProps, {\n  voteCount,\n  fetchCategories,\n  fetchPosts,\n  selectCategories,\n  fetchVotes,\n  createVote\n})(Feed);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx"],"names":["React","Component","User","Post","Header","selectCategories","fetchCategories","fetchVotes","createVote","fetchPosts","connect","voteCount","Feed","state","downVoteCount","postsFilter","filterBool","howToFilterBool","updateBool","rapidVoteCount","handleChange","newSelection","props","handleSelect","filterPosts","console","log","selectedPosts","posts","countedVotes","keys","Object","sort","a","b","filteredPosts","map","key","reverse","componentDidMount","render","currentUser","categories","votes","length","post","i","voteOnPost","resetFilterBool","updatePosts","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from '../components/User';\n// import { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories} from '../actions/categoryActions'\nimport { fetchVotes, createVote } from '../actions/voteActions'\nimport { fetchPosts } from '../actions/postActions'\nimport { connect } from 'react-redux'\nimport { voteCount } from '../actions/voteActions'\n\nclass Feed extends Component {\n\tstate = {\n\t\tdownVoteCount: 0,\n\t\tpostsFilter: [],\n\t\tfilterBool: false,\n\t\thowToFilterBool: false,\n\t\tupdateBool:false,\n\t\trapidVoteCount: null\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.props.fetchCategories();\n\t\tawait this.props.fetchVotes();\n\t\tawait this.props.fetchPosts();\n\t\tawait this.props.voteCount();\n\t}\n\n\thandleChange = async newSelection => {\n\t\tawait this.props.selectCategories(newSelection);\n\t\tawait this.props.fetchPosts();\n\t};\n\n\thandleSelect = async () => {\n\t\tawait this.props.fetchPosts()\n\t};\n\n\t// let postsFiltered = await howToFilterBool ? postsFilter.sort((a, b) => {\n\t// \tconst post1 = a[1]\n\t// \tconst post2 = b[1]\n\n\t// \tlet comparison = 0;\n\t// \tif (post1 > post2) {\n\t// \t  comparison = 1\n\t// \t} else if (post1 < post2) {\n\t// \t  comparison = -1\n\t// \t}\n\t// \treturn comparison;\n\t//   }) : postsFilter.sort((a, b) => {\n\t// \tconst post1 = a[1]\n\t// \tconst post2 = b[1]\n\n\t// \tlet comparison = 0;\n\t// \tif (post1 > post2) {\n\t// \t  comparison = -1\n\t// \t} else if (post1 < post2) {\n\t// \t  comparison = 1\n\t// \t}\n\t// \treturn comparison;\n\t//   })\n\n\tfilterPosts = async () => {\n\t\tconsole.log(\"Filter Posts\")\n\t\tconst { selectedPosts, posts, countedVotes} = this.props\n\t\tlet keys = Object.keys(countedVotes)\n\t\tkeys.sort((a, b) => {return countedVotes[a] - countedVotes[b]})\n\t\tlet filteredPosts = keys.map(key => {\n\t\t\treturn {[key]: countedVotes[key]}\n\t\t})\n\t\tfilteredPosts.reverse()\n\t\t\n\t}\n\n\trender() {\n\t\tconst { currentUser, selectedPosts, categories, posts, votes } = this.props;\n\t\tif (this.props.posts.length > 0) {\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tfilterPosts={this.filterPosts}\n\t\t\t\t\t/>\n\t\t\t\t\t<User \n\t\t\t\t\t\tcurrentUser={currentUser} \n\t\t\t\t\t\tposts={posts} \n\t\t\t\t\t\tvotes={votes} \n\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='posts-container'>\n\t\t\t\t\t{selectedPosts.length > 0\n\t\t\t\t\t\t? selectedPosts.map((post, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t:\n\t\t\t\t\t\tposts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tupdatePosts={this.updatePosts}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t/> \n\t\t\t\t\t<br/>\n\t\t\t\t\t<h1 className=\"lodaing\">Loading Posts...</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tposts: state.posts.posts,\n\tselectedPosts : state.posts.selectedPosts,\n\tvotes: state.votes.votes,\n\tcountedVotes: state.votes.voteCount\n})\n\nexport default connect(mapStateToProps, { voteCount, fetchCategories, fetchPosts, selectCategories, fetchVotes, createVote })(Feed)\n"]},"metadata":{},"sourceType":"module"}