{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/MainPage.jsx\";\nimport React, { Component } from 'react';\nimport Login from '../components/forms/Login';\nimport Feed from './Feed';\nimport NewUser from '../components/forms/NewUser';\nimport { userLogin, userLogout, newUser, pageReload } from '../actions/userActions';\nimport { connect } from 'react-redux'; // import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport history from '../history';\nexport const API = 'http://localhost:3000/';\n\nclass MainPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      password: '',\n      passwordConfirmation: '',\n      username: '' // token: null,\n      // isLoggedIn: false,\n      // isNewUser: false,\n      // currentUser: null\n\n    };\n\n    this.logOut = () => {\n      this.props.userLogout();\n    };\n\n    this.handleChange = e => {\n      let key = e.target.name;\n      let newState = e.target.value;\n      this.setState({\n        [key]: newState\n      });\n    };\n\n    this.onNewUserSubmit = e => {\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password,\n            passwordConfirmation = _this$state.passwordConfirmation;\n      e.preventDefault();\n      fetch(API + 'users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n            password_confirmation: passwordConfirmation\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        res.error ? alert(res.error) : this.setState({\n          currentUser: res,\n          isLoggedIn: true,\n          token: res.token,\n          password: '',\n          passwordConfirmation: ''\n        });\n      }).then(res => localStorage.setItem('user-token', this.state.token));\n    };\n\n    this.onLoginSubmit = async e => {\n      const _this$state2 = this.state,\n            username = _this$state2.username,\n            password = _this$state2.password;\n      e.preventDefault();\n      await fetch(API + 'login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      }).then(res => res.json()).then(res => {\n        res.errors ? alert(res.errors) : this.setState({\n          currentUser: res,\n          isLoggedIn: true,\n          token: res.token,\n          password: '',\n          passwordConfirmation: ''\n        });\n      });\n\n      if (this.state.token !== null) {\n        localStorage.setItem('user-token', this.state.token);\n      }\n    };\n\n    this.newUserClickHandler = () => {\n      this.setState({\n        isNewUser: true\n      });\n    };\n\n    this.conditionalRender = () => {\n      console.log('MainPage');\n      let Component;\n      const _this$state3 = this.state,\n            isLoggedIn = _this$state3.isLoggedIn,\n            isNewUser = _this$state3.isNewUser,\n            currentUser = _this$state3.currentUser,\n            token = _this$state3.token;\n\n      if (!isLoggedIn) {\n        if (isNewUser) {\n          history.push('/new-user');\n          Component = React.createElement(NewUser, {\n            handleChange: this.handleChange,\n            onSubmit: this.onNewUserSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        } else {\n          history.push('/login');\n          Component = React.createElement(Login, {\n            handleChange: this.handleChange,\n            onClick: this.newUserClickHandler,\n            onSubmit: this.onLoginSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          });\n        }\n      } else if (isLoggedIn) {\n        history.push('/feed');\n        Component = React.createElement(Feed, {\n          currentUser: currentUser,\n          token: token,\n          logOut: this.logOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        });\n      } else {\n        history.push('/login');\n        Component = React.createElement(Login, {\n          handleChange: this.handleChange,\n          onClick: this.newUserClickHandler,\n          onSubmit: this.onLoginSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }\n\n      return Component;\n    };\n  }\n\n  componentDidMount() {// if(localStorage.getItem('user-token') !== \"undefined\" && localStorage.getItem('user-token') !== null) {\n    // \tfetch(`${API}users/current_user`, {\n    // \t\theaders: {\n    // \t\t'Authorization': `Bearer ${localStorage.getItem('user-token')}`,\n    // \t\t'Content-Type': 'application/json',\n    // \t\tAccept: 'application/json'}\n    // \t})\n    // \t.then(res => res.json())\n    // \t.then(res => dispatch({currentUser: res, isLoggedIn: true, token: res.token}))\n    // }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.conditionalRender());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  isLoggedIn: state.user.isLoggedIn,\n  isNewUser: state.user.isNewUser\n});\n\nexport default connect(mapStateToProps, {\n  userLogin,\n  userLogout,\n  newUser,\n  pageReload\n})(MainPage);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/MainPage.jsx"],"names":["React","Component","Login","Feed","NewUser","userLogin","userLogout","newUser","pageReload","connect","history","API","MainPage","state","input","password","passwordConfirmation","username","logOut","props","handleChange","e","key","target","name","newState","value","setState","onNewUserSubmit","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","user","password_confirmation","then","res","json","error","alert","currentUser","isLoggedIn","token","localStorage","setItem","onLoginSubmit","errors","newUserClickHandler","isNewUser","conditionalRender","console","log","push","componentDidMount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Login from '../components/forms/Login';\nimport Feed from './Feed';\nimport NewUser from '../components/forms/NewUser';\nimport { userLogin, userLogout, newUser, pageReload } from '../actions/userActions'\nimport { connect } from 'react-redux'\n// import { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport history from '../history';\n\nexport const API = 'http://localhost:3000/';\n\nclass MainPage extends Component {\n\tstate = {\n\t\tinput: '',\n\t\tpassword: '',\n\t\tpasswordConfirmation: '',\n\t\tusername: '',\n\t\t// token: null,\n\t\t// isLoggedIn: false,\n\t\t// isNewUser: false,\n\t\t// currentUser: null\n\t};\n\n\tcomponentDidMount(){\n\t\t// if(localStorage.getItem('user-token') !== \"undefined\" && localStorage.getItem('user-token') !== null) {\n\t\t// \tfetch(`${API}users/current_user`, {\n\t\t// \t\theaders: {\n\t\t// \t\t'Authorization': `Bearer ${localStorage.getItem('user-token')}`,\n\t\t// \t\t'Content-Type': 'application/json',\n\t\t// \t\tAccept: 'application/json'}\n\t\t// \t})\n\t\t// \t.then(res => res.json())\n\t\t// \t.then(res => dispatch({currentUser: res, isLoggedIn: true, token: res.token}))\n\t\t// }\n\t}\n\n\tlogOut = () => {\n\t\tthis.props.userLogout()\n\t}\n\n\thandleChange = e => {\n\t\tlet key = e.target.name;\n\t\tlet newState = e.target.value;\n\t\tthis.setState({ [key]: newState });\n\t};\n\n\tonNewUserSubmit = e => {\n\t\tconst { username, password, passwordConfirmation } = this.state;\n\t\te.preventDefault();\n\t\tfetch(API + 'users', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuser: {\n\t\t\t\t\tusername: username,\n\t\t\t\t\tpassword: password,\n\t\t\t\t\tpassword_confirmation: passwordConfirmation\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tres.error\n\t\t\t\t\t? alert(res.error)\n\t\t\t\t\t: this.setState({\n\t\t\t\t\t\t\tcurrentUser: res,\n\t\t\t\t\t\t\tisLoggedIn: true,\n\t\t\t\t\t\t\ttoken: res.token,\n\t\t\t\t\t\t\tpassword: '',\n\t\t\t\t\t\t\tpasswordConfirmation: ''\n\t\t\t\t\t  });\n\t\t\t})\n\t\t\t.then(res => localStorage.setItem('user-token', this.state.token));\n\t};\n\n\tonLoginSubmit = async (e) => {\n\t\tconst { username, password } = this.state;\n\t\te.preventDefault();\n\t\tawait fetch(API + 'login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json', Accept: 'application/json' },\n\t\t\tbody: JSON.stringify({ user: { username: username, password: password } })\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tres.errors ? \n\t\t\t\talert(res.errors)\n\t\t\t\t:\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUser: res,\n\t\t\t\t\tisLoggedIn: true,\n\t\t\t\t\ttoken: res.token,\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tpasswordConfirmation: ''\n\t\t\t\t})\n\t\t\t}\n\t\t\t)\n\t\t\tif(this.state.token !== null){\n\t\t\t\tlocalStorage.setItem('user-token', this.state.token);\n\t\t\t}\n\t};\n\t//\n\n\tnewUserClickHandler = () => {\n\t\tthis.setState({ isNewUser: true });\n\t};\n\n\tconditionalRender = () => {\n\t\tconsole.log('MainPage');\n\t\tlet Component;\n\t\tconst { isLoggedIn, isNewUser, currentUser, token } = this.state;\n\t\tif (!isLoggedIn) {\n\t\t\tif (isNewUser) {\n\t\t\t\thistory.push('/new-user');\n\t\t\t\tComponent = <NewUser handleChange={this.handleChange} onSubmit={this.onNewUserSubmit} />;\n\t\t\t} else {\n\t\t\t\thistory.push('/login');\n\t\t\t\tComponent = (\n\t\t\t\t\t<Login\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tonClick={this.newUserClickHandler}\n\t\t\t\t\t\tonSubmit={this.onLoginSubmit}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (isLoggedIn){\n\t\t\thistory.push('/feed');\n\t\t\tComponent = <Feed currentUser={currentUser} token={token} logOut={this.logOut} />;\n\t\t} else {\n\t\t\thistory.push('/login');\n\t\t\t\tComponent = (\n\t\t\t\t\t<Login\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\tonClick={this.newUserClickHandler}\n\t\t\t\t\t\tonSubmit={this.onLoginSubmit}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\treturn Component;\n\t};\n\n\trender() {\n\t\treturn <div className='main-container'>{this.conditionalRender()}</div>;\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tcurrentUser: state.user.currentUser,\n\tisLoggedIn: state.user.isLoggedIn,\n\tisNewUser: state.user.isNewUser\n})\n\nexport default connect(mapStateToProps, { userLogin, userLogout, newUser, pageReload })(MainPage)\n\n"]},"metadata":{},"sourceType":"module"}