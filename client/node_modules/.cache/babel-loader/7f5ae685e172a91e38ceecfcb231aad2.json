{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/components/User.jsx\";\nimport React, { Component } from 'react';\nimport { API } from '../containers/MainPage';\nimport { connect } from 'react-redux';\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usersVotes: [],\n      usersPosts: [],\n      votesOnUsers: [],\n      usersComments: [],\n      comments: [],\n      prevState: []\n    };\n\n    this.fetchComments = () => {\n      fetch(API + 'comments').then(res => res.json()).then(res => this.usersComments(res));\n    };\n\n    this.usersVotes = votes => {\n      const usersVotes = votes.filter(vote => vote.user_id === this.props.currentUser.user.id);\n      this.setState({\n        usersVotes: usersVotes\n      });\n    };\n\n    this.usersPosts = posts => {\n      const usersPosts = posts.filter(post => post.user_id === this.props.currentUser.user.id);\n      this.setState({\n        usersPosts: usersPosts\n      });\n    };\n\n    this.usersComments = comments => {\n      const usersComments = comments.filter(comment => comment.user_id === this.props.currentUser.user.id);\n      this.setState({\n        usersComments: usersComments,\n        comments: comments\n      });\n    };\n  }\n\n  // async componentDidUpdate(){\n  //     if (this.state.prevState === this.props.votes)\n  //     this.usersVotes(this.props.votes)\n  // }\n  async componentDidMount() {\n    const _this$props = this.props,\n          posts = _this$props.posts,\n          votes = _this$props.votes;\n    await this.setState({\n      prevState: this.props.votes\n    });\n    await this.fetchComments();\n    await this.usersPosts(posts);\n    await this.usersVotes(votes);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          posts = _this$props2.posts,\n          votes = _this$props2.votes,\n          categories = _this$props2.categories; // const { usersComments, usersPosts, usersVotes, comments } = this.state\n\n    return React.createElement(\"div\", {\n      className: \"user-card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user-card-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"user-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.currentUser.user.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Total Posts: \", this.state.usersPosts.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Total Votes: \", this.state.usersVotes.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Total Commentss: \", this.state.usersComments.length)), React.createElement(\"div\", {\n      className: \"general-info-card-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"general-info-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" ReadThat General info \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Total Posts: \", posts.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Total Votes: \", votes.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Total Commentss: \", this.state.comments.length), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Total Categories: \", categories.length)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  votes: state.votes.votes,\n  posts: state.posts.posts,\n  categories: state.categories.categories\n});\n\nexport default connect(mapStateToProps)(User);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/components/User.jsx"],"names":["React","Component","API","connect","User","state","usersVotes","usersPosts","votesOnUsers","usersComments","comments","prevState","fetchComments","fetch","then","res","json","votes","filter","vote","user_id","props","currentUser","user","id","setState","posts","post","comment","componentDidMount","render","categories","username","length","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { API } from '../containers/MainPage'\nimport { connect } from 'react-redux'\n\nclass User extends Component {\n    state = {\n        usersVotes: [],\n        usersPosts: [],\n        votesOnUsers: [],\n        usersComments: [],\n        comments: [],\n        prevState: []\n    }\n  \n    fetchComments = () => {\n        fetch(API + 'comments')\n            .then(res => res.json())\n            .then(res => this.usersComments(res))\n    }\n \n    // async componentDidUpdate(){\n    //     if (this.state.prevState === this.props.votes)\n    //     this.usersVotes(this.props.votes)\n    // }\n\n    async componentDidMount(){\n        const { posts, votes } = this.props\n        await this.setState({prevState: this.props.votes})\n        await this.fetchComments()\n        await this.usersPosts(posts)\n        await this.usersVotes(votes)\n\n    }\n    usersVotes = (votes) => {\n        const usersVotes = votes.filter(vote => vote.user_id === this.props.currentUser.user.id)\n        this.setState({usersVotes: usersVotes })\n    }\n    usersPosts = (posts) => {\n       const usersPosts = posts.filter(post => post.user_id === this.props.currentUser.user.id)\n       this.setState({usersPosts: usersPosts})\n    }\n    usersComments = (comments) => {\n        const usersComments = comments.filter(comment => comment.user_id === this.props.currentUser.user.id)\n        this.setState({usersComments: usersComments, comments: comments})\n    }\n\n    render(){\n        const { posts, votes, categories } = this.props\n        // const { usersComments, usersPosts, usersVotes, comments } = this.state\n        return(\n            <div className='user-card-container'>\n                <div className='user-card-div'>\n                    <h1 className='user-heading'>{this.props.currentUser.user.username}</h1>\n                        <p>Total Posts: {this.state.usersPosts.length}</p>\n                        <p>Total Votes: {this.state.usersVotes.length}</p>\n                        <p>Total Commentss: {this.state.usersComments.length}</p>\n                </div>\n                <div className='general-info-card-div'>\n                <h2 className='general-info-heading'> ReadThat General info </h2>\n                    <p>Total Posts: {posts.length}</p>\n                    <p>Total Votes: {votes.length}</p>\n                    <p>Total Commentss: {this.state.comments.length}</p>\n                    <p>Total Categories: {categories.length}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    votes: state.votes.votes,\n    posts: state.posts.posts,\n    categories: state.categories.categories\n})\n\nexport default connect (mapStateToProps)(User)"]},"metadata":{},"sourceType":"module"}