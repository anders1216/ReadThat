{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/components/forms/NewPost.jsx\";\nimport React from 'react';\n\nconst NewPost = props => {\n  const handleChange = props.handleChange,\n        handleClick = props.handleClick,\n        handleWidget = props.handleWidget,\n        handleImageUpload = props.handleImageUpload,\n        onSubmit = props.onSubmit,\n        categories = props.categories;\n  const widget = window.cloudinary.createUploadWidget({\n    cloud_name: 'readthat',\n    upload_preset: 'mipbqbmk',\n    sources: [\"local\", \"url\", \"camera\"],\n    singleUploadAutoClose: false,\n    inlineContainer: 'DOM Element'\n  }, function (errors, image) {\n    handleImageUpload(errors, image);\n  });\n  return React.createElement(\"div\", {\n    className: \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content-new-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close\",\n    name: \"newPost\",\n    onClick: e => handleClick(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"form\", {\n    name: \"posts\",\n    onSubmit: e => onSubmit(e, \"post\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    onChange: e => handleChange(e, \"post\"),\n    placeholder: \"Catchy Title. (e.g. The Hunt for the Bread October...)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: e => handleChange(e, \"post\"),\n    placeholder: \"The Medium is the Message so...\\xAF\\\\_(\\u30C4)_/\\xAF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    name: \"img\",\n    type: \"url\",\n    onChange: e => handleChange(e, \"post\"),\n    placeholder: \"Image URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Or Upload an Image:\"), React.createElement(\"button\", {\n    className: \"upload-img-btn\",\n    onClick: e => handleWidget(e, widget),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Upload Image\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    name: \"category\",\n    defaultValue: \"All\",\n    onChange: e => handleChange(e, 'post'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, categories.map(category => {\n    return React.createElement(\"option\", {\n      value: category.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, category.category);\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/components/forms/NewPost.jsx"],"names":["React","NewPost","props","handleChange","handleClick","handleWidget","handleImageUpload","onSubmit","categories","widget","window","cloudinary","createUploadWidget","cloud_name","upload_preset","sources","singleUploadAutoClose","inlineContainer","errors","image","e","map","category"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst NewPost = (props) => {\n\t\tconst { handleChange, handleClick, handleWidget, handleImageUpload, onSubmit, categories } = props\n\n\t\tconst widget = window.cloudinary.createUploadWidget({ cloud_name: 'readthat', upload_preset: 'mipbqbmk', sources: [\"local\", \"url\", \"camera\"], singleUploadAutoClose: false, inlineContainer: 'DOM Element'}, \n\t\tfunction(errors, image) {handleImageUpload(errors, image)})\n\t\t\n\n\t\treturn (\n\t\t\t<div className='modal'>\n\t\t\t\t<div className='modal-content-new-post'>\n\t\t\t\t<button className='close' name=\"newPost\" onClick={e => handleClick(e)}>Close</button>\n\t\t\t\t<form name=\"posts\" onSubmit={e => onSubmit(e, \"post\")}>\n                    <input\n\t\t\t\t\t\tname='title'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tonChange={e => handleChange(e, \"post\")}\n\t\t\t\t\t\tplaceholder='Catchy Title. (e.g. The Hunt for the Bread October...)'\n\t\t\t\t\t/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tname='content'\n\t\t\t\t\t\tonChange={e => handleChange(e, \"post\")}\n\t\t\t\t\t\tplaceholder= 'The Medium is the Message so...¯\\_(ツ)_/¯'\n\t\t\t\t\t/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='img'\n\t\t\t\t\t\ttype='url'\n\t\t\t\t\t\tonChange={e => handleChange(e, \"post\")}\n\t\t\t\t\t\tplaceholder='Image URL'\n\t\t\t\t\t/>\n\t\t\t\t\t<p>Or Upload an Image:</p>\n\t\t\t\t\t<button className=\"upload-img-btn\" onClick={e => handleWidget(e, widget)}>Upload Image</button>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<select name=\"category\" defaultValue=\"All\" onChange={ e => handleChange(e, 'post')}> \n\t\t\t\t\t\t{categories.map(category => {\n\t\t\t\t\t\t\treturn <option value={category.category}>{category.category}</option>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</select>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<button type='submit'>Submit</button>\n\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div> \n\t\t);\n\t}\n\texport default NewPost;"]},"metadata":{},"sourceType":"module"}