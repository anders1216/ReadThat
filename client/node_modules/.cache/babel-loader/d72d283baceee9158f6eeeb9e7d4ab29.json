{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx\";\nimport React, { Component } from 'react';\nimport User from '../components/User'; // import { API } from './MainPage';\n\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories } from '../actions/categoryActions';\nimport { fetchVotes, createVote } from '../actions/voteActions';\nimport { fetchPosts } from '../actions/postActions';\nimport { connect } from 'react-redux';\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      downVoteCount: 0,\n      postsFilter: [],\n      filterBool: false,\n      howToFilterBool: false,\n      updateBool: false,\n      rapidVoteCount: null\n    };\n\n    this.handleChange = async newSelection => {\n      await this.props.selectCategories(newSelection);\n      await this.props.fetchPosts();\n    };\n\n    this.handleSelect = async () => {\n      await this.props.fetchPosts();\n    };\n\n    this.voteOnPost = async (postID, e) => {\n      this.props.createVote(postID, e);\n      await this.setState({\n        updateBool: true\n      });\n    };\n\n    this.postsFilter = async (postId, voteCount) => {\n      console.log(\"postsFilter\");\n      let placeHolder = [];\n      const postsFilter = this.state.postsFilter;\n      const posts = this.props.posts;\n\n      if (postsFilter.length !== posts.length) {\n        let placeHolder = this.state.postsFilter;\n        await placeHolder.push([postId, voteCount]);\n        placeHolder.sort((a, b) => {\n          const post1 = a[1];\n          const post2 = b[1];\n          let comparison = 0;\n\n          if (post1 > post2) {\n            comparison = -1;\n          } else if (post1 < post2) {\n            comparison = 1;\n          }\n\n          return comparison;\n        });\n        this.setState({\n          postsFilter: placeHolder\n        });\n      } else if (this.state.updateBool) {\n        await placeHolder.push([postId, voteCount]);\n        placeHolder.sort((a, b) => {\n          const post1 = a[1];\n          const post2 = b[1];\n          let comparison = 0;\n\n          if (post1 > post2) {\n            comparison = -1;\n          } else if (post1 < post2) {\n            comparison = 1;\n          }\n\n          return comparison;\n        }); //   this.setState({filterBool: true})\n      }\n\n      this.setState({\n        postsFilter: placeHolder,\n        updateBool: false\n      });\n    };\n\n    this.filterPosts = async () => {\n      const _this$state = this.state,\n            postsFilter = _this$state.postsFilter,\n            howToFilterBool = _this$state.howToFilterBool;\n      const _this$props = this.props,\n            selectedPosts = _this$props.selectedPosts,\n            posts = _this$props.posts;\n      let postsFiltered = (await howToFilterBool) ? postsFilter.sort((a, b) => {\n        const post1 = a[1];\n        const post2 = b[1];\n        let comparison = 0;\n\n        if (post1 > post2) {\n          comparison = 1;\n        } else if (post1 < post2) {\n          comparison = -1;\n        }\n\n        return comparison;\n      }) : postsFilter.sort((a, b) => {\n        const post1 = a[1];\n        const post2 = b[1];\n        let comparison = 0;\n\n        if (post1 > post2) {\n          comparison = -1;\n        } else if (post1 < post2) {\n          comparison = 1;\n        }\n\n        return comparison;\n      });\n\n      if (selectedPosts.length !== 0) {\n        console.log('if');\n        let filteredPosts = await postsFiltered.map((post1, i) => {\n          return selectedPosts.filter(post => post.id === post1[0]);\n        }).flat();\n        await this.setState({\n          selectedPosts: filteredPosts,\n          filterBool: true,\n          howToFilterBool: !howToFilterBool\n        });\n      } else {\n        console.log(\"else\");\n        let filteredPosts = await postsFiltered.map((post1, i) => {\n          return posts.filter(post => post.id === post1[0]);\n        }).flat();\n        await this.setState({\n          posts: filteredPosts,\n          filterBool: true,\n          howToFilterBool: !howToFilterBool\n        });\n      }\n    };\n\n    this.resetFilterBool = async () => {\n      console.log(\"resetFilterBool\");\n      await this.setState({\n        filterBool: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchCategories();\n    await this.props.fetchVotes();\n    await this.props.fetchPosts();\n  }\n\n  render() {\n    const howToFilterBool = this.state.howToFilterBool;\n    const _this$props2 = this.props,\n          currentUser = _this$props2.currentUser,\n          selectedPosts = _this$props2.selectedPosts,\n          categories = _this$props2.categories,\n          posts = _this$props2.posts,\n          votes = _this$props2.votes;\n\n    if (this.props.posts.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleChange: this.handleChange,\n        handleSelect: this.handleSelect,\n        filterPosts: this.filterPosts,\n        howToFilterBool: howToFilterBool,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(User, {\n        currentUser: currentUser,\n        posts: posts,\n        votes: votes,\n        categories: categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, selectedPosts.length > 0 ? selectedPosts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      }) : posts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleSelect: this.handleSelect,\n        updatePosts: this.updatePosts,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"lodaing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Loading Posts...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.posts,\n  selectedPosts: state.posts.selectedPosts,\n  votes: state.votes.votes\n});\n\nexport default connect(mapStateToProps, {\n  fetchCategories,\n  fetchPosts,\n  selectCategories,\n  fetchVotes,\n  createVote\n})(Feed);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx"],"names":["React","Component","User","Post","Header","selectCategories","fetchCategories","fetchVotes","createVote","fetchPosts","connect","Feed","state","downVoteCount","postsFilter","filterBool","howToFilterBool","updateBool","rapidVoteCount","handleChange","newSelection","props","handleSelect","voteOnPost","postID","e","setState","postId","voteCount","console","log","placeHolder","posts","length","push","sort","a","b","post1","post2","comparison","filterPosts","selectedPosts","postsFiltered","filteredPosts","map","i","filter","post","id","flat","resetFilterBool","componentDidMount","render","currentUser","categories","votes","updatePosts","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from '../components/User';\n// import { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories} from '../actions/categoryActions'\nimport { fetchVotes, createVote } from '../actions/voteActions'\nimport { fetchPosts } from '../actions/postActions'\nimport { connect } from 'react-redux'\n\nclass Feed extends Component {\n\tstate = {\n\t\tdownVoteCount: 0,\n\t\tpostsFilter: [],\n\t\tfilterBool: false,\n\t\thowToFilterBool: false,\n\t\tupdateBool:false,\n\t\trapidVoteCount: null\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.props.fetchCategories()\n\t\tawait this.props.fetchVotes()\n\t\tawait this.props.fetchPosts();\n\t}\n\n\thandleChange = async newSelection => {\n\t\tawait this.props.selectCategories(newSelection);\n\t\tawait this.props.fetchPosts();\n\t};\n\n\thandleSelect = async () => {\n\t\tawait this.props.fetchPosts()\n\t};\n\n\tvoteOnPost = async (postID, e) => {\n\t\tthis.props.createVote(postID, e)\n\t\tawait this.setState({ updateBool:true })\n\t};\n\n\tpostsFilter = async (postId, voteCount) => {\n\t\tconsole.log(\"postsFilter\")\n\t\tlet placeHolder = [];\n\t\tconst { postsFilter } = this.state\n\t\tconst { posts } = this.props\n\t\tif (postsFilter.length !== posts.length) {\n\t\tlet placeHolder = this.state.postsFilter\n\t\tawait placeHolder.push([postId, voteCount])\n\t\tplaceHolder.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\tthis.setState({postsFilter: placeHolder})\n\t\t} else if (this.state.updateBool){\n\t\t\tawait placeHolder.push([postId, voteCount])\n\t\tplaceHolder.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\t//   this.setState({filterBool: true})\n\t\t}\n\t\tthis.setState({postsFilter: placeHolder, updateBool:false})\n\t}\n\n\tfilterPosts = async () => {\n\t\tconst { postsFilter, howToFilterBool  } = this.state\n\t\tconst { selectedPosts, posts } = this.props\n\t\tlet postsFiltered = await howToFilterBool ? postsFilter.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = 1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = -1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  }) : postsFilter.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\tif (selectedPosts.length !== 0){\n\t\tconsole.log('if')\n\t\t\tlet filteredPosts = await postsFiltered.map((post1, i) => {\n\t\t\t\treturn selectedPosts.filter(post => post.id === post1[0])\n\t\t\t}).flat()\n\t\t\tawait this.setState({selectedPosts: filteredPosts, filterBool: true, howToFilterBool: !howToFilterBool})\n\t\t} else {\n\t\tconsole.log(\"else\")\n\t\tlet filteredPosts = await postsFiltered.map((post1, i) => {\n\t\t\treturn posts.filter(post => post.id === post1[0])\n\t\t}).flat()\n\t\tawait this.setState({posts: filteredPosts, filterBool: true, howToFilterBool: !howToFilterBool})}\n\t}\n\n\n\tresetFilterBool = async () => {\n\t\tconsole.log(\"resetFilterBool\")\n\t\tawait this.setState({filterBool: false})\n\t}\n\n\trender() {\n\t\tconst { howToFilterBool } = this.state;\n\t\tconst { currentUser, selectedPosts, categories, posts, votes } = this.props;\n\t\tif (this.props.posts.length > 0) {\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tfilterPosts={this.filterPosts}\n\t\t\t\t\t\thowToFilterBool={howToFilterBool}\n\t\t\t\t\t/>\n\t\t\t\t\t<User \n\t\t\t\t\t\tcurrentUser={currentUser} \n\t\t\t\t\t\tposts={posts} \n\t\t\t\t\t\tvotes={votes} \n\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='posts-container'>\n\t\t\t\t\t{selectedPosts.length > 0\n\t\t\t\t\t\t? selectedPosts.map((post, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t:\n\t\t\t\t\t\tposts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tupdatePosts={this.updatePosts}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t/> \n\t\t\t\t\t<br/>\n\t\t\t\t\t<h1 className=\"lodaing\">Loading Posts...</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tposts: state.posts.posts,\n\tselectedPosts : state.posts.selectedPosts,\n\tvotes: state.votes.votes\n})\n\nexport default connect(mapStateToProps, { fetchCategories, fetchPosts, selectCategories, fetchVotes, createVote })(Feed)\n"]},"metadata":{},"sourceType":"module"}