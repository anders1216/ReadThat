{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx\";\nimport React, { Component } from 'react';\nimport User from '../components/User'; // import { API } from './MainPage';\n\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories } from '../actions/categoryActions';\nimport { fetchVotes, createVote } from '../actions/voteActions';\nimport { fetchPosts } from '../actions/postActions';\nimport { connect } from 'react-redux';\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      downVoteCount: 0,\n      postsFilter: [],\n      filterBool: false,\n      howToFilterBool: false,\n      updateBool: false,\n      rapidVoteCount: null\n    };\n\n    this.handleChange = async newSelection => {\n      await this.props.selectCategories(newSelection);\n      await this.props.fetchPosts();\n    };\n\n    this.handleSelect = async () => {\n      await this.props.fetchPosts();\n    };\n\n    this.voteOnPost = async (postID, e) => {\n      this.props.createVote(postID, e);\n    };\n\n    this.filterPosts = async () => {\n      const _this$props = this.props,\n            selectedPosts = _this$props.selectedPosts,\n            posts = _this$props.posts,\n            votes = _this$props.votes;\n      console.log(\"Filter Posts\");\n\n      if (selectedPosts.length !== 0) {\n        console.log('Selected Posts:', selectedPosts);\n      } else {\n        console.log(\"All-Posts:\", posts);\n        console.log(\"All-Votes:\", votes);\n        let voteCount = {};\n        votes.map(vote => {\n          if (voteCount[vote.post_id]) {\n            if (vote.is_down_vote) {\n              voteCount[vote.id] -= 1;\n            } else {\n              voteCount[vote.id] += 1;\n            }\n          } else {\n            console.log(vote.id);\n\n            if (vote.is_down_vote) {\n              voteCount[vote.id] = -1;\n            } else {\n              voteCount[vote.id] = 1;\n            }\n          }\n        });\n        console.log(\"voteCount:\", voteCount);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchCategories();\n    await this.props.fetchVotes();\n    await this.props.fetchPosts();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          currentUser = _this$props2.currentUser,\n          selectedPosts = _this$props2.selectedPosts,\n          categories = _this$props2.categories,\n          posts = _this$props2.posts,\n          votes = _this$props2.votes;\n\n    if (this.props.posts.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleChange: this.handleChange,\n        handleSelect: this.handleSelect,\n        filterPosts: this.filterPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(User, {\n        currentUser: currentUser,\n        posts: posts,\n        votes: votes,\n        categories: categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, selectedPosts.length > 0 ? selectedPosts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }) : posts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleSelect: this.handleSelect,\n        updatePosts: this.updatePosts,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"lodaing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Loading Posts...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.posts,\n  selectedPosts: state.posts.selectedPosts,\n  votes: state.votes.votes\n});\n\nexport default connect(mapStateToProps, {\n  fetchCategories,\n  fetchPosts,\n  selectCategories,\n  fetchVotes,\n  createVote\n})(Feed);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx"],"names":["React","Component","User","Post","Header","selectCategories","fetchCategories","fetchVotes","createVote","fetchPosts","connect","Feed","state","downVoteCount","postsFilter","filterBool","howToFilterBool","updateBool","rapidVoteCount","handleChange","newSelection","props","handleSelect","voteOnPost","postID","e","filterPosts","selectedPosts","posts","votes","console","log","length","voteCount","map","vote","post_id","is_down_vote","id","componentDidMount","render","currentUser","categories","post","i","resetFilterBool","updatePosts","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from '../components/User';\n// import { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories} from '../actions/categoryActions'\nimport { fetchVotes, createVote } from '../actions/voteActions'\nimport { fetchPosts } from '../actions/postActions'\nimport { connect } from 'react-redux'\n\nclass Feed extends Component {\n\tstate = {\n\t\tdownVoteCount: 0,\n\t\tpostsFilter: [],\n\t\tfilterBool: false,\n\t\thowToFilterBool: false,\n\t\tupdateBool:false,\n\t\trapidVoteCount: null\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.props.fetchCategories()\n\t\tawait this.props.fetchVotes()\n\t\tawait this.props.fetchPosts();\n\t}\n\n\thandleChange = async newSelection => {\n\t\tawait this.props.selectCategories(newSelection);\n\t\tawait this.props.fetchPosts();\n\t};\n\n\thandleSelect = async () => {\n\t\tawait this.props.fetchPosts()\n\t};\n\n\tvoteOnPost = async (postID, e) => {\n\t\tthis.props.createVote(postID, e)\n\t};\n\n\t// let postsFiltered = await howToFilterBool ? postsFilter.sort((a, b) => {\n\t// \tconst post1 = a[1]\n\t// \tconst post2 = b[1]\n\n\t// \tlet comparison = 0;\n\t// \tif (post1 > post2) {\n\t// \t  comparison = 1\n\t// \t} else if (post1 < post2) {\n\t// \t  comparison = -1\n\t// \t}\n\t// \treturn comparison;\n\t//   }) : postsFilter.sort((a, b) => {\n\t// \tconst post1 = a[1]\n\t// \tconst post2 = b[1]\n\n\t// \tlet comparison = 0;\n\t// \tif (post1 > post2) {\n\t// \t  comparison = -1\n\t// \t} else if (post1 < post2) {\n\t// \t  comparison = 1\n\t// \t}\n\t// \treturn comparison;\n\t//   })\n\n\tfilterPosts = async () => {\n\t\tconst { selectedPosts, posts, votes} = this.props\n\t\tconsole.log(\"Filter Posts\")\n\t\tif (selectedPosts.length !== 0){\n\t\t\tconsole.log('Selected Posts:', selectedPosts)\n\t\t} else {\n\t\t\tconsole.log(\"All-Posts:\", posts)\n\t\t\tconsole.log(\"All-Votes:\", votes)\n\t\t\tlet voteCount = {}\n\t\t\t\tvotes.map(vote => {\n\t\t\t\t\tif(voteCount[vote.post_id]){\n\t\t\t\t\t\tif(vote.is_down_vote){\n\t\t\t\t\t\t\tvoteCount[vote.id] -= 1\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tvoteCount[vote.id] += 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tconsole.log(vote.id)\n\t\t\t\t\t\tif(vote.is_down_vote){\n\t\t\t\t\t\t\tvoteCount[vote.id] = -1\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tvoteCount[vote.id] = 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\tconsole.log(\"voteCount:\", voteCount)\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { currentUser, selectedPosts, categories, posts, votes } = this.props;\n\t\tif (this.props.posts.length > 0) {\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tfilterPosts={this.filterPosts}\n\t\t\t\t\t/>\n\t\t\t\t\t<User \n\t\t\t\t\t\tcurrentUser={currentUser} \n\t\t\t\t\t\tposts={posts} \n\t\t\t\t\t\tvotes={votes} \n\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className='posts-container'>\n\t\t\t\t\t{selectedPosts.length > 0\n\t\t\t\t\t\t? selectedPosts.map((post, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t:\n\t\t\t\t\t\tposts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tupdatePosts={this.updatePosts}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t/> \n\t\t\t\t\t<br/>\n\t\t\t\t\t<h1 className=\"lodaing\">Loading Posts...</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tposts: state.posts.posts,\n\tselectedPosts : state.posts.selectedPosts,\n\tvotes: state.votes.votes\n})\n\nexport default connect(mapStateToProps, { fetchCategories, fetchPosts, selectCategories, fetchVotes, createVote })(Feed)\n"]},"metadata":{},"sourceType":"module"}