{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx\";\nimport React, { Component } from 'react';\nimport User from '../components/User';\nimport { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport selectCategories from '../actions/categoryActions';\nimport fetchPosts from '../actions/postActions';\nimport { connect } from 'react-redux';\nexport default class Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      votes: [],\n      downVoteCount: 0,\n      posts: [],\n      selectedPosts: [],\n      selectedCategories: null,\n      isPoster: false,\n      isMod: false,\n      categories: [],\n      postsFilter: [],\n      filterBool: false,\n      howToFilterBool: false,\n      updateBool: false,\n      rapidVoteCount: null\n    };\n\n    this.handleChange = async newSelection => {\n      await this.props.selectCategories(newSelection);\n      await this.handleSelect();\n    };\n\n    this.handleSelect = async () => {\n      const _this$state = this.state,\n            selectedCategories = _this$state.selectedCategories,\n            posts = _this$state.posts;\n      const token = this.props.token;\n\n      if (!selectedCategories && posts) {\n        fetch(API + 'posts', {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        }).then(res => res.json()).then(res => this.setState({\n          posts: res\n        }));\n      } else {\n        await this.setState({\n          selectedPosts: []\n        });\n        selectedCategories.forEach(category => {\n          fetch(API + 'categories/' + \"\".concat(category.value), {\n            headers: {\n              Authorization: \"Bearer \".concat(token)\n            }\n          }).then(res => res.json()).then(res => this.setState({\n            selectedPosts: [...this.state.selectedPosts, res].flat()\n          }));\n        });\n      }\n    };\n\n    this.voteOnPost = async (postID, e) => {\n      console.log('voteOnPost');\n      const currentUser = this.props.currentUser;\n      let placeHolder;\n      e === 'up' ? await fetch(API + 'votes', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('user-token')),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          vote: {\n            post_id: postID,\n            user_id: currentUser.user.id,\n            is_down_vote: false\n          }\n        })\n      }).then(res => res.json()).then(vote => {\n        vote.message ? placeHolder = vote.votes : placeHolder = vote;\n      }) : await fetch(API + 'votes/delete', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('user-token')),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          vote: {\n            post_id: postID,\n            user_id: currentUser.user.id,\n            is_down_vote: true\n          }\n        })\n      }).then(res => res.json()).then(vote => {\n        vote.message ? placeHolder = vote.votes : placeHolder = vote;\n      });\n      await this.setState({\n        votes: placeHolder,\n        updateBool: true\n      });\n    };\n\n    this.postsFilter = async (postId, voteCount) => {\n      console.log(\"postsFilter\");\n      let placeHolder = [];\n      const _this$state2 = this.state,\n            postsFilter = _this$state2.postsFilter,\n            posts = _this$state2.posts;\n\n      if (postsFilter.length !== posts.length) {\n        let placeHolder = this.state.postsFilter;\n        await placeHolder.push([postId, voteCount]);\n        placeHolder.sort((a, b) => {\n          const post1 = a[1];\n          const post2 = b[1];\n          let comparison = 0;\n\n          if (post1 > post2) {\n            comparison = -1;\n          } else if (post1 < post2) {\n            comparison = 1;\n          }\n\n          return comparison;\n        });\n        this.setState({\n          postsFilter: placeHolder\n        });\n      } else if (this.state.updateBool) {\n        await placeHolder.push([postId, voteCount]);\n        placeHolder.sort((a, b) => {\n          const post1 = a[1];\n          const post2 = b[1];\n          let comparison = 0;\n\n          if (post1 > post2) {\n            comparison = -1;\n          } else if (post1 < post2) {\n            comparison = 1;\n          }\n\n          return comparison;\n        }); //   this.setState({filterBool: true})\n      }\n\n      this.setState({\n        postsFilter: placeHolder,\n        updateBool: false\n      });\n    };\n\n    this.filterPosts = async () => {\n      const _this$state3 = this.state,\n            postsFilter = _this$state3.postsFilter,\n            howToFilterBool = _this$state3.howToFilterBool,\n            selectedPosts = _this$state3.selectedPosts,\n            posts = _this$state3.posts;\n      let postsFiltered = (await howToFilterBool) ? postsFilter.sort((a, b) => {\n        const post1 = a[1];\n        const post2 = b[1];\n        let comparison = 0;\n\n        if (post1 > post2) {\n          comparison = 1;\n        } else if (post1 < post2) {\n          comparison = -1;\n        }\n\n        return comparison;\n      }) : postsFilter.sort((a, b) => {\n        const post1 = a[1];\n        const post2 = b[1];\n        let comparison = 0;\n\n        if (post1 > post2) {\n          comparison = -1;\n        } else if (post1 < post2) {\n          comparison = 1;\n        }\n\n        return comparison;\n      });\n\n      if (selectedPosts.length !== 0) {\n        console.log('if');\n        let filteredPosts = await postsFiltered.map((post1, i) => {\n          return selectedPosts.filter(post => post.id === post1[0]);\n        }).flat();\n        await this.setState({\n          selectedPosts: filteredPosts,\n          filterBool: true,\n          howToFilterBool: !howToFilterBool\n        });\n      } else {\n        console.log(\"else\");\n        let filteredPosts = await postsFiltered.map((post1, i) => {\n          return posts.filter(post => post.id === post1[0]);\n        }).flat();\n        await this.setState({\n          posts: filteredPosts,\n          filterBool: true,\n          howToFilterBool: !howToFilterBool\n        });\n      }\n    };\n\n    this.resetFilterBool = async () => {\n      console.log(\"resetFilterBool\");\n      await this.setState({\n        filterBool: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await fetch(API + 'categories', {\n      headers: {\n        Authorization: \"Bearer \".concat(this.props.token)\n      }\n    }).then(res => res.json()).then(res => this.setState({\n      categories: res\n    }));\n    await fetch(API + 'votes').then(res => res.json()).then(votes => this.setState({\n      votes: votes\n    }));\n    await this.handleSelect();\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          selectedCategories = _this$state4.selectedCategories,\n          selectedPosts = _this$state4.selectedPosts,\n          votes = _this$state4.votes,\n          howToFilterBool = _this$state4.howToFilterBool,\n          posts = _this$state4.posts,\n          categories = _this$state4.categories;\n    const _this$props = this.props,\n          token = _this$props.token,\n          currentUser = _this$props.currentUser,\n          logOut = _this$props.logOut;\n\n    if (this.state.posts.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Header, {\n        categories: this.state.categories,\n        selectedCategories: selectedCategories,\n        handleChange: this.handleChange,\n        token: token,\n        currentUser: currentUser,\n        handleSelect: this.handleSelect,\n        filterPosts: this.filterPosts,\n        howToFilterBool: howToFilterBool,\n        logOut: logOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(User, {\n        currentUser: currentUser,\n        posts: posts,\n        votes: votes,\n        categories: categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, selectedPosts.length > 0 ? this.state.selectedPosts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        });\n      }) : this.state.posts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleSelect: this.handleSelect,\n        updatePosts: this.updatePosts,\n        categories: this.state.categories,\n        selectedCategories: selectedCategories,\n        handleChange: this.handleChange,\n        token: token,\n        currentUser: currentUser,\n        logOut: logOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"lodaing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Loading Posts...\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx"],"names":["React","Component","User","API","Post","Header","selectCategories","fetchPosts","connect","Feed","state","votes","downVoteCount","posts","selectedPosts","selectedCategories","isPoster","isMod","categories","postsFilter","filterBool","howToFilterBool","updateBool","rapidVoteCount","handleChange","newSelection","props","handleSelect","token","fetch","headers","Authorization","then","res","json","setState","forEach","category","value","flat","voteOnPost","postID","e","console","log","currentUser","placeHolder","method","localStorage","getItem","Accept","body","JSON","stringify","vote","post_id","user_id","user","id","is_down_vote","message","postId","voteCount","length","push","sort","a","b","post1","post2","comparison","filterPosts","postsFiltered","filteredPosts","map","i","filter","post","resetFilterBool","componentDidMount","render","logOut","updatePosts"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport User from '../components/User';\nimport { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport selectCategories from '../actions/categoryActions'\nimport fetchPosts from '../actions/postActions'\nimport { connect } from 'react-redux'\n\nexport default class Feed extends Component {\n\tstate = {\n\t\tvotes: [],\n\t\tdownVoteCount: 0,\n\t\tposts: [],\n\t\tselectedPosts: [],\n\t\tselectedCategories: null,\n\t\tisPoster: false,\n\t\tisMod: false,\n\t\tcategories: [],\n\t\tpostsFilter: [],\n\t\tfilterBool: false,\n\t\thowToFilterBool: false,\n\t\tupdateBool:false,\n\t\trapidVoteCount: null\n\t};\n\n\tasync componentDidMount() {\n\t\tawait fetch(API + 'categories', {\n\t\t\theaders: { Authorization: `Bearer ${this.props.token}` }\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => this.setState({ categories: res }));\n\t\tawait fetch(API + 'votes')\n\t\t\t.then(res => res.json())\n\t\t\t.then(votes => this.setState({ votes: votes }));\n\t\tawait this.handleSelect();\n\t}\n\n\thandleChange = async newSelection => {\n\t\tawait this.props.selectCategories(newSelection);\n\t\tawait this.handleSelect();\n\t};\n\n\thandleSelect = async () => {\n\t\tconst { selectedCategories, posts } = this.state;\n\t\tconst { token } = this.props;\n\t\tif (!selectedCategories && posts) {\n\t\t\tfetch(API + 'posts', {\n\t\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => this.setState({ posts: res }));\n\t\t} else {\n\t\t\tawait this.setState({ selectedPosts: [] }); \n\t\t\tselectedCategories.forEach(category => {\n\t\t\t\tfetch(API + 'categories/' + `${category.value}`, {\n\t\t\t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(res => this.setState({ selectedPosts: [...this.state.selectedPosts, res].flat()}))\n\t\t\t});\n\t\t}\n\t};\n\n\tvoteOnPost = async (postID, e) => {\n\t\tconsole.log('voteOnPost')\n\t\tconst { currentUser } = this.props;\n\t\tlet placeHolder;\n\t\te === 'up'\n\t\t\t? \n\t\t\tawait fetch(API + 'votes', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem('user-token')}`,\n\t\t\t\t\t\t'Content-Type': 'application/json',\t\n\t\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({ vote: { post_id: postID, user_id: currentUser.user.id, is_down_vote: false } })\n\t\t\t  })\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(vote => {\n\t\t\t\t\t\tvote.message ? \n\t\t\t\t\t\tplaceHolder = vote.votes\n\t\t\t\t\t\t: \n\t\t\t\t\t\tplaceHolder = vote;\n\t\t\t\t\t})\n\t\t\t: \n\t\t\tawait fetch(API + 'votes/delete', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem('user-token')}`,\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({ vote: { post_id: postID, user_id: currentUser.user.id, is_down_vote: true } })\n\t\t\t  })\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then( vote =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tvote.message ? \n\t\t\t\t\t\tplaceHolder = vote.votes\n\t\t\t\t\t\t:\n\t\t\t\t\t\tplaceHolder = vote\n\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tawait this.setState({ votes: placeHolder, updateBool:true})\n\t};\n\n\tpostsFilter = async (postId, voteCount) => {\n\t\tconsole.log(\"postsFilter\")\n\t\tlet placeHolder = [];\n\t\tconst { postsFilter, posts } = this.state\n\t\tif (postsFilter.length !== posts.length) {\n\t\tlet placeHolder = this.state.postsFilter\n\t\tawait placeHolder.push([postId, voteCount])\n\t\tplaceHolder.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\tthis.setState({postsFilter: placeHolder})\n\t\t} else if (this.state.updateBool){\n\t\t\tawait placeHolder.push([postId, voteCount])\n\t\tplaceHolder.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\t//   this.setState({filterBool: true})\n\t\t}\n\t\tthis.setState({postsFilter: placeHolder, updateBool:false})\n\t}\n\n\tfilterPosts = async () => {\n\t\tconst { postsFilter, howToFilterBool, selectedPosts, posts  } = this.state\n\t\tlet postsFiltered = await howToFilterBool ? postsFilter.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = 1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = -1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  }) : postsFilter.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\tif (selectedPosts.length !== 0){\n\t\tconsole.log('if')\n\t\t\tlet filteredPosts = await postsFiltered.map((post1, i) => {\n\t\t\t\treturn selectedPosts.filter(post => post.id === post1[0])\n\t\t\t}).flat()\n\t\t\tawait this.setState({selectedPosts: filteredPosts, filterBool: true, howToFilterBool: !howToFilterBool})\n\t\t} else {\n\t\tconsole.log(\"else\")\n\t\tlet filteredPosts = await postsFiltered.map((post1, i) => {\n\t\t\treturn posts.filter(post => post.id === post1[0])\n\t\t}).flat()\n\t\tawait this.setState({posts: filteredPosts, filterBool: true, howToFilterBool: !howToFilterBool})}\n\t}\n\n\n\tresetFilterBool = async () => {\n\t\tconsole.log(\"resetFilterBool\")\n\t\tawait this.setState({filterBool: false})\n\t}\n\n\trender() {\n\t\tconst { selectedCategories, selectedPosts, votes, howToFilterBool, posts, categories } = this.state;\n\t\tconst { token, currentUser, logOut } = this.props;\n\t\tif (this.state.posts.length > 0) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tcategories={this.state.categories}\n\t\t\t\t\t\tselectedCategories={selectedCategories}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tfilterPosts={this.filterPosts}\n\t\t\t\t\t\thowToFilterBool={howToFilterBool}\n\t\t\t\t\t\tlogOut={logOut}\n\t\t\t\t\t/>\n\t\t\t\t\t<User currentUser={currentUser} posts={posts} votes={votes} categories={categories}/>\n\t\t\t\t\t<div className='posts-container'>\n\t\t\t\t\t{selectedPosts.length > 0\n\t\t\t\t\t\t? this.state.selectedPosts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: this.state.posts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tupdatePosts={this.updatePosts}\n\t\t\t\t\t\tcategories={this.state.categories}\n\t\t\t\t\t\tselectedCategories={selectedCategories}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tlogOut={logOut}\n\t\t\t\t\t/> \n\t\t\t\t\t<br/>\n\t\t\t\t\t<h1 className=\"lodaing\">Loading Posts...</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}