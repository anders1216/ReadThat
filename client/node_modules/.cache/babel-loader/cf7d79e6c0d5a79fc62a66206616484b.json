{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/components/Post.jsx\";\nimport React, { Component } from 'react';\nimport defaultImage from '../images/logo.png';\nimport { API } from '../containers/MainPage';\nimport NewComment from './forms/NewComment';\nimport Comment from './Comment';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newComment: '',\n      comments: [],\n      postsVotes: [],\n      voteCount: 0,\n      displayComments: false,\n      commenting: false,\n      prevState: [],\n      hasUpVoted: false,\n      hasDownVoted: false,\n      renderModalBool: false\n    };\n\n    this.updatePostsVotes = async () => {\n      let postsVotesVar = await this.props.votes.filter(vote => vote.post_id === this.props.post.id);\n      let upVotes = await postsVotesVar.filter(vote => vote.is_down_vote === false);\n      let downVotes = await postsVotesVar.filter(vote => vote.is_down_vote === true);\n      let calculatedVoteCount = (await upVotes.length) - downVotes.length;\n      this.setState({\n        postsVotes: postsVotesVar,\n        voteCount: calculatedVoteCount\n      });\n\n      if (upVotes.some(vote => vote['user_id'] === this.props.currentUser.user.id && vote['is_down_vote'] === false)) {\n        await this.setState({\n          hasUpVoted: true\n        });\n      } else if (downVotes.some(vote => vote['user_id'] === this.props.currentUser.user.id && vote['is_down_vote'] === true)) {\n        await this.setState({\n          hasDownVoted: true\n        });\n      }\n\n      await this.props.resetFilterBool();\n    };\n\n    this.votesThings = async () => {\n      console.log('votesthings');\n      const _this$props = this.props,\n            votes = _this$props.votes,\n            post = _this$props.post,\n            currentUser = _this$props.currentUser;\n      let postsVotesVar = await votes.filter(vote => vote.post_id === post.id);\n      let upVotes = await postsVotesVar.filter(vote => vote.is_down_vote === false);\n      let downVotes = await postsVotesVar.filter(vote => vote.is_down_vote === true);\n      let calculatedVoteCount = (await upVotes.length) - downVotes.length;\n      await this.props.postsFilter(post.id, calculatedVoteCount);\n      this.setState({\n        postsVotes: postsVotesVar,\n        voteCount: calculatedVoteCount\n      });\n\n      if (upVotes.some(vote => vote['user_id'] === currentUser.user.id && vote['is_down_vote'] === false)) {\n        await this.setState({\n          hasUpVoted: true\n        });\n      } else if (downVotes.some(vote => vote['user_id'] === currentUser.user.id && vote['is_down_vote'] === true)) await this.setState({\n        hasDownVoted: true\n      });\n    };\n\n    this.commentOnPost = () => {\n      const commenting = this.state.commenting;\n      this.setState({\n        commenting: !commenting\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        newComment: e.target.value\n      });\n    };\n\n    this.handleSubmit = (e, key, value) => {\n      e.preventDefault();\n      this.state.newComment.length > 0 ? this.postComment(key, value) : window.alert('No Empty Comments');\n    };\n\n    this.postComment = (key, value) => {\n      const _this$state = this.state,\n            comments = _this$state.comments,\n            newComment = _this$state.newComment,\n            commenting = _this$state.commenting;\n      const currentUser = this.props.currentUser;\n      fetch(API + 'comments', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem(currentUser.user.id)),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          comment: {\n            content: newComment,\n            user_id: currentUser.user.id,\n            [key]: value\n          }\n        })\n      }).then(res => res.json()).then(comment => {\n        comment.errors ? alert(comment.errors) : this.setState({\n          comments: [...comments, comment]\n        });\n      }).then(this.setState({\n        commenting: !commenting\n      }));\n    };\n\n    this.displayComments = async () => {\n      const post = this.props.post;\n      await fetch(API + 'comments/' + \"\".concat(post.id)).then(res => res.json()).then(comments => this.setState({\n        comments: comments\n      }));\n      this.setState({\n        displayComments: !this.state.displayComments\n      });\n\n      if (this.state.comments.length === 0) {\n        alert(\"Currently No Comments...Be the First to Write One!\");\n      }\n    };\n\n    this.rapidVoteIncrement = async e => {\n      const _this$props2 = this.props,\n            voteOnPost = _this$props2.voteOnPost,\n            post = _this$props2.post;\n      voteOnPost(post.id, e.target.name);\n\n      if (e.target.name === 'up' && !this.state.hasDownVoted && !this.state.hasUpVoted) {\n        await this.setState({\n          voteCount: this.state.voteCount + 1,\n          hasUpVoted: true\n        });\n        console.log('up1');\n      } else if (e.target.name === 'up' && this.state.hasDownVoted && !this.state.hasUpVoted) {\n        await this.setState({\n          voteCount: this.state.voteCount + 2,\n          hasDownVoted: false,\n          hasUpVoted: true\n        });\n        console.log('up2');\n      } else if (e.target.name === 'up' && !this.state.hasDownVoted && this.state.hasUpVoted) {\n        await this.setState({\n          voteCount: this.state.voteCount - 1,\n          hasDownVoted: false,\n          hasUpVoted: false\n        });\n        console.log('up3');\n      } else if (e.target.name === 'down' && !this.state.hasDownVoted && !this.state.hasUpVoted) {\n        await this.setState({\n          voteCount: this.state.voteCount - 1,\n          hasDownVoted: true\n        });\n        console.log('down1');\n      } else if (e.target.name === 'down' && !this.state.hasDownVoted && this.state.hasUpVoted) {\n        await this.setState({\n          voteCount: this.state.voteCount - 2,\n          hasUpVoted: false,\n          hasDownVoted: true\n        });\n        console.log('down2');\n      } else if (e.target.name === 'down' && this.state.hasDownVoted && !this.state.hasUpVoted) {\n        await this.setState({\n          voteCount: this.state.voteCount + 1,\n          hasDownVoted: false,\n          hasUpVoted: false\n        });\n        console.log('down3');\n      }\n    };\n\n    this.renderModal = () => {\n      this.setState({\n        renderModalBool: !this.state.renderModalBool\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.votesThings();\n  }\n\n  async componentDidUpdate() {\n    if (this.props.filterBool) {\n      await this.updatePostsVotes();\n    } else if (this.props.updateBool) {\n      await this.votesThings;\n    }\n  }\n\n  render() {\n    const _this$props$post = this.props.post,\n          img = _this$props$post.img,\n          title = _this$props$post.title,\n          content = _this$props$post.content,\n          link = _this$props$post.link,\n          uploadedFile = _this$props$post.uploadedFile,\n          id = _this$props$post.id;\n    const _this$props3 = this.props,\n          post = _this$props3.post,\n          currentUser = _this$props3.currentUser;\n    const _this$state2 = this.state,\n          commenting = _this$state2.commenting,\n          comments = _this$state2.comments,\n          voteCount = _this$state2.voteCount;\n    let image;\n\n    if (!img && !uploadedFile) {\n      image = defaultImage;\n    } else if (!img && uploadedFile) {\n      image = uploadedFile;\n    } else {\n      image = defaultImage;\n    }\n\n    return this.state.renderModalBool ? React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"contents-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-post-img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"modal-post-img\",\n      src: image,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, content, link)), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Doots: \", voteCount), React.createElement(\"button\", {\n      name: \"up\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"\\u25B2\"), React.createElement(\"button\", {\n      name: \"down\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"\\u25BC\"), React.createElement(\"button\", {\n      onClick: e => this.commentOnPost(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Comment\"), commenting ? React.createElement(NewComment, {\n      variableKey: 'post_id',\n      value: id,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      commentOnPost: this.commentOnPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: e => this.displayComments(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Display Comments\"), React.createElement(\"button\", {\n      onClick: e => this.renderModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Close Post\"), React.createElement(\"ul\", {\n      className: \"post-ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.displayComments && comments.length > 0 ? comments.map(comment => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        comment: comment,\n        comments: comments,\n        commenting: commenting,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        displayComments: this.displayComments,\n        commentOnPost: this.commentOnPost,\n        currentUser: currentUser,\n        post: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }));\n    }) : null)))) : React.createElement(\"div\", {\n      className: \"post-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"contents-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"post-img\",\n      src: image,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, content, link)), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Doots: \", voteCount), React.createElement(\"button\", {\n      name: \"up\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"\\u25B2\"), React.createElement(\"button\", {\n      name: \"down\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"\\u25BC\"), React.createElement(\"button\", {\n      onClick: e => this.commentOnPost(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Comment\"), commenting ? React.createElement(NewComment, {\n      variableKey: 'post_id',\n      value: id,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      commentOnPost: this.commentOnPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: e => this.displayComments(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Display Comments\"), React.createElement(\"button\", {\n      onClick: e => this.renderModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Enlarge Post\"), React.createElement(\"ul\", {\n      className: \"post-ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, this.state.displayComments && comments.length > 0 ? comments.map(comment => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        comment: comment,\n        comments: comments,\n        commenting: commenting,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        displayComments: this.displayComments,\n        commentOnPost: this.commentOnPost,\n        currentUser: currentUser,\n        post: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }));\n    }) : null)));\n  }\n\n}\n\nexport default Post; // =============================================================================================================\n// voteOnPost = () => {\n// \tconst { currentUser, post } = this.props\n// \tconst { votes } = this.state\n// \tconsole.log('vote')\n// \tfetch(API + 'votes', {\n// \t\tmethod: 'POST',\n// \t\theaders: {'Authorization': `Bearer ${localStorage.getItem(currentUser)}`, 'Content-Type': 'application/json', Accept: 'application/json'},\n// \t\tbody: JSON.stringify({vote: {post: post, user: currentUser.id}})\n// \t}).then(res => res.json()).then(vote => { vote.errors ? alert(vote.errors) :\n// \t\tthis.setState({votes: [...votes, vote]})})\n// \t//\n// }\n// unvoteOnPost = (e) => {\n// \tconst { currentUser, post } = this.props\n// \tconsole.log('unvote')\n// \tfetch(API + 'votes/delete', {\n// \t\tmethod: 'POST',\n// \t\theaders: {'Authorization': `Bearer ${localStorage.getItem(currentUser)}`, 'Content-Type': 'application/json', Accept: 'application/json'},\n// \t\tbody: JSON.stringify({vote: {post: post, user: currentUser.id}})\n// \t}).then(res => res.json()).then(votes => this.setState({votes: votes})).then(this.countDownVotes())\n// }\n// countDownVotes = () => {\n// \tconst { votes } = this.state\n// \tif (votes.length > 0){\n// \t\tvotes.forEach(vote => {\n// \t\t\tif (vote.is_down_vote){\n// \t\t\t\tthis.setState({downVoteCount: this.state.downVoteCount++})\n// \t\t\t}\n// \t\t})\n// \t}\n// }","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/components/Post.jsx"],"names":["React","Component","defaultImage","API","NewComment","Comment","Post","state","newComment","comments","postsVotes","voteCount","displayComments","commenting","prevState","hasUpVoted","hasDownVoted","renderModalBool","updatePostsVotes","postsVotesVar","props","votes","filter","vote","post_id","post","id","upVotes","is_down_vote","downVotes","calculatedVoteCount","length","setState","some","currentUser","user","resetFilterBool","votesThings","console","log","postsFilter","commentOnPost","handleChange","e","target","value","handleSubmit","key","preventDefault","postComment","window","alert","fetch","method","headers","Authorization","localStorage","getItem","Accept","body","JSON","stringify","comment","content","user_id","then","res","json","errors","rapidVoteIncrement","voteOnPost","name","renderModal","componentDidMount","componentDidUpdate","filterBool","updateBool","render","img","title","link","uploadedFile","image","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACPC,MAAAA,UAAU,EAAE,EADL;AAEPC,MAAAA,QAAQ,EAAE,EAFH;AAGPC,MAAAA,UAAU,EAAE,EAHL;AAIPC,MAAAA,SAAS,EAAE,CAJJ;AAKPC,MAAAA,eAAe,EAAE,KALV;AAMPC,MAAAA,UAAU,EAAE,KANL;AAOPC,MAAAA,SAAS,EAAE,EAPJ;AAQPC,MAAAA,UAAU,EAAE,KARL;AASPC,MAAAA,YAAY,EAAE,KATP;AAUPC,MAAAA,eAAe,EAAE;AAVV,KADoB;;AAAA,SA2B5BC,gBA3B4B,GA2BT,YAAY;AAC9B,UAAIC,aAAa,GAAI,MAAM,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiB,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,EAAjE,CAA3B;AACA,UAAIC,OAAO,GAAG,MAAMR,aAAa,CAACG,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACK,YAAL,KAAsB,KAAnD,CAApB;AACA,UAAIC,SAAS,GAAI,MAAMV,aAAa,CAACG,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACK,YAAL,KAAsB,IAAnD,CAAvB;AACA,UAAIE,mBAAmB,GAAI,OAAMH,OAAO,CAACI,MAAd,IAAuBF,SAAS,CAACE,MAA5D;AACA,WAAKC,QAAL,CAAc;AAAEtB,QAAAA,UAAU,EAAES,aAAd;AAA6BR,QAAAA,SAAS,EAAEmB;AAAxC,OAAd;;AACA,UAAKH,OAAO,CAACM,IAAR,CACJV,IAAI,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAKH,KAAL,CAAWc,WAAX,CAAuBC,IAAvB,CAA4BT,EAAhD,IAAsDH,IAAI,CAAC,cAAD,CAAJ,KAAyB,KADnF,CAAL,EAGC;AACA,cAAM,KAAKS,QAAL,CAAc;AAAEjB,UAAAA,UAAU,EAAE;AAAd,SAAd,CAAN;AACA,OALD,MAKO,IAAKc,SAAS,CAACI,IAAV,CACVV,IAAI,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoB,KAAKH,KAAL,CAAWc,WAAX,CAAuBC,IAAvB,CAA4BT,EAAhD,IAAsDH,IAAI,CAAC,cAAD,CAAJ,KAAyB,IAD7E,CAAL,EAGN;AACA,cAAM,KAAKS,QAAL,CAAc;AAAEhB,UAAAA,YAAY,EAAE;AAAhB,SAAd,CAAN;AACA;;AACD,YAAM,KAAKI,KAAL,CAAWgB,eAAX,EAAN;AACA,KA7C2B;;AAAA,SA+C5BC,WA/C4B,GA+Cd,YAAY;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AADyB,0BAEY,KAAKnB,KAFjB;AAAA,YAEjBC,KAFiB,eAEjBA,KAFiB;AAAA,YAEVI,IAFU,eAEVA,IAFU;AAAA,YAEJS,WAFI,eAEJA,WAFI;AAGzB,UAAIf,aAAa,GAAG,MAAME,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBC,IAAI,CAACC,EAA3C,CAA1B;AACA,UAAIC,OAAO,GAAG,MAAMR,aAAa,CAACG,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACK,YAAL,KAAsB,KAAnD,CAApB;AACA,UAAIC,SAAS,GAAG,MAAMV,aAAa,CAACG,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACK,YAAL,KAAsB,IAAnD,CAAtB;AACA,UAAIE,mBAAmB,GAAG,OAAMH,OAAO,CAACI,MAAd,IAAuBF,SAAS,CAACE,MAA3D;AACA,YAAM,KAAKX,KAAL,CAAWoB,WAAX,CAAuBf,IAAI,CAACC,EAA5B,EAAgCI,mBAAhC,CAAN;AACA,WAAKE,QAAL,CAAc;AAAEtB,QAAAA,UAAU,EAAES,aAAd;AAA6BR,QAAAA,SAAS,EAAEmB;AAAxC,OAAd;;AACA,UAAKH,OAAO,CAACM,IAAR,CACHV,IAAI,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBW,WAAW,CAACC,IAAZ,CAAiBT,EAArC,IAA2CH,IAAI,CAAC,cAAD,CAAJ,KAAyB,KADzE,CAAL,EAGE;AACD,cAAM,KAAKS,QAAL,CAAc;AAAEjB,UAAAA,UAAU,EAAE;AAAd,SAAd,CAAN;AACA,OALD,MAKO,IAAKc,SAAS,CAACI,IAAV,CACVV,IAAI,IAAIA,IAAI,CAAC,SAAD,CAAJ,KAAoBW,WAAW,CAACC,IAAZ,CAAiBT,EAArC,IAA2CH,IAAI,CAAC,cAAD,CAAJ,KAAyB,IADlE,CAAL,EAIN,MAAM,KAAKS,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd,CAAN;AACD,KAlE2B;;AAAA,SAoE5ByB,aApE4B,GAoEZ,MAAM;AAAA,YACb5B,UADa,GACE,KAAKN,KADP,CACbM,UADa;AAErB,WAAKmB,QAAL,CAAc;AAAEnB,QAAAA,UAAU,EAAE,CAACA;AAAf,OAAd;AACA,KAvE2B;;AAAA,SAyE5B6B,YAzE4B,GAyEbC,CAAC,IAAI;AACnB,WAAKX,QAAL,CAAc;AAAExB,QAAAA,UAAU,EAAEmC,CAAC,CAACC,MAAF,CAASC;AAAvB,OAAd;AACA,KA3E2B;;AAAA,SA6E5BC,YA7E4B,GA6Eb,CAACH,CAAD,EAAII,GAAJ,EAASF,KAAT,KAAmB;AACjCF,MAAAA,CAAC,CAACK,cAAF;AACA,WAAKzC,KAAL,CAAWC,UAAX,CAAsBuB,MAAtB,GAA+B,CAA/B,GACG,KAAKkB,WAAL,CAAiBF,GAAjB,EAAsBF,KAAtB,CADH,GAEGK,MAAM,CAACC,KAAP,CAAa,mBAAb,CAFH;AAGA,KAlF2B;;AAAA,SAoF5BF,WApF4B,GAoFd,CAACF,GAAD,EAAMF,KAAN,KAAgB;AAAA,0BACgB,KAAKtC,KADrB;AAAA,YACrBE,QADqB,eACrBA,QADqB;AAAA,YACXD,UADW,eACXA,UADW;AAAA,YACCK,UADD,eACCA,UADD;AAAA,YAErBqB,WAFqB,GAEL,KAAKd,KAFA,CAErBc,WAFqB;AAG7BkB,MAAAA,KAAK,CAACjD,GAAG,GAAG,UAAP,EAAmB;AACvBkD,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,OAAO,EAAE;AACRC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqBvB,WAAW,CAACC,IAAZ,CAAiBT,EAAtC,CAAZ,CADL;AAER,0BAAgB,kBAFR;AAGRgC,UAAAA,MAAM,EAAE;AAHA,SAFc;AAOvBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,OAAO,EAAEvD,UAAX;AAAuBwD,YAAAA,OAAO,EAAE9B,WAAW,CAACC,IAAZ,CAAiBT,EAAjD;AAAqD,aAACqB,GAAD,GAAOF;AAA5D;AADW,SAAf;AAPiB,OAAnB,CAAL,CAWEoB,IAXF,CAWOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXd,EAYEF,IAZF,CAYOH,OAAO,IAAI;AAChBA,QAAAA,OAAO,CAACM,MAAR,GACGjB,KAAK,CAACW,OAAO,CAACM,MAAT,CADR,GAEG,KAAKpC,QAAL,CAAc;AAAEvB,UAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcqD,OAAd;AAAZ,SAAd,CAFH;AAGA,OAhBF,EAiBEG,IAjBF,CAiBO,KAAKjC,QAAL,CAAc;AAAEnB,QAAAA,UAAU,EAAE,CAACA;AAAf,OAAd,CAjBP;AAkBA,KAzG2B;;AAAA,SA2G5BD,eA3G4B,GA2GV,YAAY;AAAA,YACrBa,IADqB,GACZ,KAAKL,KADO,CACrBK,IADqB;AAG7B,YAAM2B,KAAK,CAACjD,GAAG,GAAG,WAAN,aAAuBsB,IAAI,CAACC,EAA5B,CAAD,CAAL,CACJuC,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECxD,QAAQ,IAAI,KAAKuB,QAAL,CAAc;AAAEvB,QAAAA,QAAQ,EAAEA;AAAZ,OAAd,CAFb,CAAN;AAGA,WAAKuB,QAAL,CAAc;AAAEpB,QAAAA,eAAe,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAA/B,OAAd;;AACA,UAAI,KAAKL,KAAL,CAAWE,QAAX,CAAoBsB,MAApB,KAA+B,CAAnC,EAAqC;AACpCoB,QAAAA,KAAK,CAAC,oDAAD,CAAL;AACA;AACD,KArH2B;;AAAA,SAuH5BkB,kBAvH4B,GAuHP,MAAO1B,CAAP,IAAa;AAAA,2BACJ,KAAKvB,KADD;AAAA,YACzBkD,UADyB,gBACzBA,UADyB;AAAA,YACb7C,IADa,gBACbA,IADa;AAEjC6C,MAAAA,UAAU,CAAC7C,IAAI,CAACC,EAAN,EAAUiB,CAAC,CAACC,MAAF,CAAS2B,IAAnB,CAAV;;AACA,UAAI5B,CAAC,CAACC,MAAF,CAAS2B,IAAT,KAAkB,IAAlB,IAA0B,CAAC,KAAKhE,KAAL,CAAWS,YAAtC,IAAsD,CAAC,KAAKT,KAAL,CAAWQ,UAAtE,EAAmF;AAClF,cAAM,KAAKiB,QAAL,CAAc;AAAErB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CAApC;AAAuCI,UAAAA,UAAU,EAAE;AAAnD,SAAd,CAAN;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,OAHD,MAGO,IAAII,CAAC,CAACC,MAAF,CAAS2B,IAAT,KAAkB,IAAlB,IAA0B,KAAKhE,KAAL,CAAWS,YAArC,IAAqD,CAAC,KAAKT,KAAL,CAAWQ,UAArE,EAAiF;AACvF,cAAM,KAAKiB,QAAL,CAAc;AAAErB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CAApC;AAAuCK,UAAAA,YAAY,EAAE,KAArD;AAA4DD,UAAAA,UAAU,EAAE;AAAxE,SAAd,CAAN;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,OAHM,MAGA,IAAII,CAAC,CAACC,MAAF,CAAS2B,IAAT,KAAkB,IAAlB,IAA0B,CAAC,KAAKhE,KAAL,CAAWS,YAAtC,IAAsD,KAAKT,KAAL,CAAWQ,UAArE,EAAiF;AACvF,cAAM,KAAKiB,QAAL,CAAc;AAAErB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CAApC;AAAuCK,UAAAA,YAAY,EAAE,KAArD;AAA4DD,UAAAA,UAAU,EAAE;AAAxE,SAAd,CAAN;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,OAHM,MAGA,IAAII,CAAC,CAACC,MAAF,CAAS2B,IAAT,KAAkB,MAAlB,IAA4B,CAAC,KAAKhE,KAAL,CAAWS,YAAxC,IAAwD,CAAC,KAAKT,KAAL,CAAWQ,UAAxE,EAAoF;AAC1F,cAAM,KAAKiB,QAAL,CAAc;AAAErB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CAApC;AAAuCK,UAAAA,YAAY,EAAE;AAArD,SAAd,CAAN;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,OAHM,MAGA,IAAII,CAAC,CAACC,MAAF,CAAS2B,IAAT,KAAkB,MAAlB,IAA2B,CAAC,KAAKhE,KAAL,CAAWS,YAAvC,IAAwD,KAAKT,KAAL,CAAWQ,UAAvE,EAAoF;AAC1F,cAAM,KAAKiB,QAAL,CAAc;AAAErB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CAApC;AAAuCI,UAAAA,UAAU,EAAE,KAAnD;AAA0DC,UAAAA,YAAY,EAAE;AAAxE,SAAd,CAAN;AACAsB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,OAHM,MAGA,IAAII,CAAC,CAACC,MAAF,CAAS2B,IAAT,KAAkB,MAAlB,IAA4B,KAAKhE,KAAL,CAAWS,YAAvC,IAAuD,CAAC,KAAKT,KAAL,CAAWQ,UAAvE,EAAmF;AACzF,cAAM,KAAKiB,QAAL,CAAc;AAAErB,UAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CAApC;AAAuCK,UAAAA,YAAY,EAAE,KAArD;AAA4DD,UAAAA,UAAU,EAAE;AAAxE,SAAd,CAAN;AACAuB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD,KA7I2B;;AAAA,SA+I5BiC,WA/I4B,GA+Id,MAAM;AACnB,WAAKxC,QAAL,CAAc;AAACf,QAAAA,eAAe,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAA9B,OAAd;AACA,KAjJ2B;AAAA;;AAc5B,QAAMwD,iBAAN,GAA0B;AACzB,UAAM,KAAKpC,WAAL,EAAN;AACA;;AAEA,QAAMqC,kBAAN,GAA2B;AAC3B,QAAI,KAAKtD,KAAL,CAAWuD,UAAf,EAA0B;AACzB,YAAM,KAAKzD,gBAAL,EAAN;AACA,KAFD,MAGK,IAAG,KAAKE,KAAL,CAAWwD,UAAd,EAAyB;AAC9B,YAAM,KAAKvC,WAAX;AACC;AACD;;AA0HDwC,EAAAA,MAAM,GAAG;AAAA,6BACgD,KAAKzD,KAAL,CAAWK,IAD3D;AAAA,UACAqD,GADA,oBACAA,GADA;AAAA,UACKC,KADL,oBACKA,KADL;AAAA,UACYhB,OADZ,oBACYA,OADZ;AAAA,UACqBiB,IADrB,oBACqBA,IADrB;AAAA,UAC2BC,YAD3B,oBAC2BA,YAD3B;AAAA,UACyCvD,EADzC,oBACyCA,EADzC;AAAA,yBAEsB,KAAKN,KAF3B;AAAA,UAEAK,IAFA,gBAEAA,IAFA;AAAA,UAEMS,WAFN,gBAEMA,WAFN;AAAA,yBAGoC,KAAK3B,KAHzC;AAAA,UAGAM,UAHA,gBAGAA,UAHA;AAAA,UAGYJ,QAHZ,gBAGYA,QAHZ;AAAA,UAGsBE,SAHtB,gBAGsBA,SAHtB;AAIR,QAAIuE,KAAJ;;AACA,QAAI,CAACJ,GAAD,IAAQ,CAACG,YAAb,EAA2B;AAC1BC,MAAAA,KAAK,GAAGhF,YAAR;AACA,KAFD,MAEO,IAAG,CAAC4E,GAAD,IAAQG,YAAX,EAAyB;AAC/BC,MAAAA,KAAK,GAAGD,YAAR;AACA,KAFM,MAEA;AACNC,MAAAA,KAAK,GAAGhF,YAAR;AACA;;AACD,WACC,KAAKK,KAAL,CAAWU,eAAX,GACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC8D,KAAlC,CADA,EAEA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEG,KAArC;AAA4C,MAAA,GAAG,EAAEH,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA,EAIA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEhB,OADF,EAEEiB,IAFF,CAJA,CAFA,EAWA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcrE,SAAd,CADD,EAEC;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAEgC,CAAC,IAAI,KAAK0B,kBAAL,CAAwB1B,CAAxB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAKC;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAK0B,kBAAL,CAAwB1B,CAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,EAQC;AAAQ,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKF,aAAL,CAAmBE,CAAnB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARD,EASE9B,UAAU,GACV,oBAAC,UAAD;AACC,MAAA,WAAW,EAAE,SADd;AAEC,MAAA,KAAK,EAAEa,EAFR;AAGC,MAAA,YAAY,EAAE,KAAKgB,YAHpB;AAIC,MAAA,YAAY,EAAE,KAAKI,YAJpB;AAKC,MAAA,aAAa,EAAE,KAAKL,aALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,GAQP,IAjBL,EAkBC;AAAQ,MAAA,OAAO,EAAEE,CAAC,IAAI,KAAK/B,eAAL,CAAqB+B,CAArB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAlBD,EAmBC;AAAQ,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAK6B,WAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBD,EAoBC;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKjE,KAAL,CAAWK,eAAX,IAA8BH,QAAQ,CAACsB,MAAT,GAAkB,CAAhD,GACEtB,QAAQ,CAAC0E,GAAT,CAAarB,OAAO,IAAI;AACxB,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,OAAD;AACC,QAAA,OAAO,EAAEA,OADV;AAEC,QAAA,QAAQ,EAAErD,QAFX;AAGC,QAAA,UAAU,EAAEI,UAHb;AAIC,QAAA,YAAY,EAAE,KAAK6B,YAJpB;AAKC,QAAA,YAAY,EAAE,KAAKI,YALpB;AAMC,QAAA,eAAe,EAAE,KAAKlC,eANvB;AAOC,QAAA,aAAa,EAAE,KAAK6B,aAPrB;AAQC,QAAA,WAAW,EAAEP,WARd;AASC,QAAA,IAAI,EAAET,IATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAeD,KAhBC,CADF,GAkBE,IAnBJ,CApBD,CAXA,CADD,CADA,GA0DD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCsD,KAAlC,CADF,EAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEG,KAA/B;AAAsC,MAAA,GAAG,EAAEH,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA,EAIA;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEhB,OADF,EAEEiB,IAFF,CAJA,CAFF,EAWE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcrE,SAAd,CADD,EAEC;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,OAAO,EAAEgC,CAAC,IAAI,KAAK0B,kBAAL,CAAwB1B,CAAxB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,EAKC;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAK0B,kBAAL,CAAwB1B,CAAxB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,EAQC;AAAQ,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKF,aAAL,CAAmBE,CAAnB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARD,EASE9B,UAAU,GACV,oBAAC,UAAD;AACC,MAAA,WAAW,EAAE,SADd;AAEC,MAAA,KAAK,EAAEa,EAFR;AAGC,MAAA,YAAY,EAAE,KAAKgB,YAHpB;AAIC,MAAA,YAAY,EAAE,KAAKI,YAJpB;AAKC,MAAA,aAAa,EAAE,KAAKL,aALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,GAQP,IAjBL,EAkBC;AAAQ,MAAA,OAAO,EAAEE,CAAC,IAAI,KAAK/B,eAAL,CAAqB+B,CAArB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAlBD,EAmBC;AAAQ,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAK6B,WAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBD,EAoBC;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKjE,KAAL,CAAWK,eAAX,IAA8BH,QAAQ,CAACsB,MAAT,GAAkB,CAAhD,GACEtB,QAAQ,CAAC0E,GAAT,CAAarB,OAAO,IAAI;AACxB,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,OAAD;AACC,QAAA,OAAO,EAAEA,OADV;AAEC,QAAA,QAAQ,EAAErD,QAFX;AAGC,QAAA,UAAU,EAAEI,UAHb;AAIC,QAAA,YAAY,EAAE,KAAK6B,YAJpB;AAKC,QAAA,YAAY,EAAE,KAAKI,YALpB;AAMC,QAAA,eAAe,EAAE,KAAKlC,eANvB;AAOC,QAAA,aAAa,EAAE,KAAK6B,aAPrB;AAQC,QAAA,WAAW,EAAEP,WARd;AASC,QAAA,IAAI,EAAET,IATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAeC,KAhBD,CADF,GAkBE,IAnBJ,CApBD,CAXF,CA3DA;AAkHA;;AAjR2B;;AAmR7B,eAAenB,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport defaultImage from '../images/logo.png';\nimport { API } from '../containers/MainPage';\nimport NewComment from './forms/NewComment';\nimport Comment from './Comment';\n\nclass Post extends Component {\n\tstate = {\n\t\tnewComment: '',\n\t\tcomments: [],\n\t\tpostsVotes: [],\n\t\tvoteCount: 0,\n\t\tdisplayComments: false,\n\t\tcommenting: false,\n\t\tprevState: [],\n\t\thasUpVoted: false,\n\t\thasDownVoted: false,\n\t\trenderModalBool: false\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.votesThings()\n\t}\n\n\t async componentDidUpdate() {\n\t\tif (this.props.filterBool){\n\t\t await this.updatePostsVotes()\n\t\t}\n\t\telse if(this.props.updateBool){\n\t\tawait this.votesThings\n\t\t}\n\t}\n\n\tupdatePostsVotes = async () => {\n\t\tlet postsVotesVar =  await this.props.votes.filter(vote => vote.post_id === this.props.post.id);\n\t\tlet upVotes = await postsVotesVar.filter(vote => vote.is_down_vote === false);\n\t\tlet downVotes =  await postsVotesVar.filter(vote => vote.is_down_vote === true);\n\t\tlet calculatedVoteCount =  await upVotes.length - downVotes.length;\n\t\tthis.setState({ postsVotes: postsVotesVar, voteCount: calculatedVoteCount });\n\t\tif ( upVotes.some(\n\t\t\tvote => vote['user_id'] === this.props.currentUser.user.id && vote['is_down_vote'] === false\n\t\t\t)\n\t\t){ \n\t\t\tawait this.setState({ hasUpVoted: true });\n\t\t} else if ( downVotes.some(\n\t\t\t\tvote => vote['user_id'] === this.props.currentUser.user.id && vote['is_down_vote'] === true\n\t\t\t)\n\t\t){ \n\t\t\tawait this.setState({ hasDownVoted: true });\n\t\t}\n\t\tawait this.props.resetFilterBool()\n\t}\n\n\tvotesThings = async () => {\n\t\tconsole.log('votesthings')\n\t\tconst { votes, post, currentUser } = this.props;\n\t\tlet postsVotesVar = await votes.filter(vote => vote.post_id === post.id);\n\t\tlet upVotes = await postsVotesVar.filter(vote => vote.is_down_vote === false);\n\t\tlet downVotes = await postsVotesVar.filter(vote => vote.is_down_vote === true);\n\t\tlet calculatedVoteCount = await upVotes.length - downVotes.length;\n\t\tawait this.props.postsFilter(post.id, calculatedVoteCount)\n\t\tthis.setState({ postsVotes: postsVotesVar, voteCount: calculatedVoteCount });\n\t\tif ( upVotes.some(\n\t\t\t\tvote => vote['user_id'] === currentUser.user.id && vote['is_down_vote'] === false\n\t\t\t)\n\t\t) {\n\t\t\tawait this.setState({ hasUpVoted: true });\n\t\t} else if ( downVotes.some(\n\t\t\t\tvote => vote['user_id'] === currentUser.user.id && vote['is_down_vote'] === true\n\t\t\t)\n\t\t)\n\t\t\tawait this.setState({ hasDownVoted: true });\n\t}\n\n\tcommentOnPost = () => {\n\t\tconst { commenting } = this.state;\n\t\tthis.setState({ commenting: !commenting });\n\t};\n\n\thandleChange = e => {\n\t\tthis.setState({ newComment: e.target.value });\n\t};\n\n\thandleSubmit = (e, key, value) => {\n\t\te.preventDefault();\n\t\tthis.state.newComment.length > 0\n\t\t\t? this.postComment(key, value)\n\t\t\t: window.alert('No Empty Comments');\n\t};\n\n\tpostComment = (key, value) => {\n\t\tconst { comments, newComment, commenting } = this.state;\n\t\tconst { currentUser } = this.props;\n\t\tfetch(API + 'comments', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(currentUser.user.id)}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcomment: { content: newComment, user_id: currentUser.user.id, [key]: value }\n\t\t\t})\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(comment => {\n\t\t\t\tcomment.errors\n\t\t\t\t\t? alert(comment.errors)\n\t\t\t\t\t: this.setState({ comments: [...comments, comment] });\n\t\t\t})\n\t\t\t.then(this.setState({ commenting: !commenting }));\n\t};\n\n\tdisplayComments = async () => {\n\t\tconst { post } = this.props;\n\n\t\tawait fetch(API + 'comments/' + `${post.id}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(comments => this.setState({ comments: comments }));\n\t\tthis.setState({ displayComments: !this.state.displayComments });\n\t\tif (this.state.comments.length === 0){\n\t\t\talert(\"Currently No Comments...Be the First to Write One!\")\n\t\t} \n\t};\n\n\trapidVoteIncrement = async (e) => {\n\t\tconst { voteOnPost, post } = this.props;\n\t\tvoteOnPost(post.id, e.target.name)\n\t\tif (e.target.name === 'up' && !this.state.hasDownVoted && !this.state.hasUpVoted ) {\n\t\t\tawait this.setState({ voteCount: this.state.voteCount + 1, hasUpVoted: true });\n\t\t\tconsole.log('up1')\n\t\t} else if (e.target.name === 'up' && this.state.hasDownVoted && !this.state.hasUpVoted) {\n\t\t\tawait this.setState({ voteCount: this.state.voteCount + 2, hasDownVoted: false, hasUpVoted: true });\n\t\t\tconsole.log('up2')\n\t\t} else if (e.target.name === 'up' && !this.state.hasDownVoted && this.state.hasUpVoted) {\n\t\t\tawait this.setState({ voteCount: this.state.voteCount - 1, hasDownVoted: false, hasUpVoted: false });\n\t\t\tconsole.log('up3')\n\t\t} else if (e.target.name === 'down' && !this.state.hasDownVoted && !this.state.hasUpVoted) {\n\t\t\tawait this.setState({ voteCount: this.state.voteCount - 1, hasDownVoted: true });\n\t\t\tconsole.log('down1')\n\t\t} else if (e.target.name === 'down'&& !this.state.hasDownVoted  && this.state.hasUpVoted ) {\n\t\t\tawait this.setState({ voteCount: this.state.voteCount - 2, hasUpVoted: false, hasDownVoted: true });\n\t\t\tconsole.log('down2')\n\t\t} else if (e.target.name === 'down' && this.state.hasDownVoted && !this.state.hasUpVoted) {\n\t\t\tawait this.setState({ voteCount: this.state.voteCount + 1, hasDownVoted: false, hasUpVoted: false });\n\t\t\tconsole.log('down3')\n\t\t}\n\t};\n\n\trenderModal = () => {\n\t\tthis.setState({renderModalBool: !this.state.renderModalBool})\n\t}\n\n\trender() {\n\t\tconst { img, title, content, link, uploadedFile, id } = this.props.post;\n\t\tconst { post, currentUser } = this.props\n\t\tconst { commenting, comments, voteCount } = this.state;\n\t\tlet image;\n\t\tif (!img && !uploadedFile) {\n\t\t\timage = defaultImage;\n\t\t} else if(!img && uploadedFile) {\n\t\t\timage = uploadedFile;\n\t\t} else {\n\t\t\timage = defaultImage\n\t\t}\n\t\treturn (\n\t\t\tthis.state.renderModalBool ? \n\t\t\t<div className=\"modal\">\n\t\t\t\t<div className='modal-content-post'>\n\t\t\t\t<div className='title-container'>{title}</div>\n\t\t\t\t<div className='contents-container'>\n\t\t\t\t<div className='modal-post-img-container'>\n\t\t\t\t\t<img className='modal-post-img' src={image} alt={title} />\n\t\t\t\t</div>\n\t\t\t\t<div className='content-container'>\n\t\t\t\t\t{content}\n\t\t\t\t\t{link}\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t<span>Doots: {voteCount}</span>\n\t\t\t\t\t<button name='up' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▲\n\t\t\t\t\t</button>\n\t\t\t\t\t<button name='down' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▼\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={e => this.commentOnPost(e)}>Comment</button>\n\t\t\t\t\t{commenting ? (\n\t\t\t\t\t\t<NewComment\n\t\t\t\t\t\t\tvariableKey={'post_id'}\n\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<button onClick={e => this.displayComments(e)}>Display Comments</button>\n\t\t\t\t\t<button onClick={e => this.renderModal()}>Close Post</button>\n\t\t\t\t\t<ul className='post-ul'>\n\t\t\t\t\t\t{this.state.displayComments && comments.length > 0\n\t\t\t\t\t\t\t? comments.map(comment => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\t\t\t\t\tcomments={comments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommenting={commenting}\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayComments={this.displayComments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t:\t\n\t\t<div className='post-card'>\n\t\t\t\t<div className='title-container'>{title}</div>\n\t\t\t\t<div className='contents-container'>\n\t\t\t\t<div className='post-img-container'>\n\t\t\t\t\t<img className='post-img' src={image} alt={title} />\n\t\t\t\t</div>\n\t\t\t\t<div className='content-container'>\n\t\t\t\t\t{content}\n\t\t\t\t\t{link}\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t<span>Doots: {voteCount}</span>\n\t\t\t\t\t<button name='up' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▲\n\t\t\t\t\t</button>\n\t\t\t\t\t<button name='down' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▼\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={e => this.commentOnPost(e)}>Comment</button>\n\t\t\t\t\t{commenting ? (\n\t\t\t\t\t\t<NewComment\n\t\t\t\t\t\t\tvariableKey={'post_id'}\n\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<button onClick={e => this.displayComments(e)}>Display Comments</button>\n\t\t\t\t\t<button onClick={e => this.renderModal()}>Enlarge Post</button>\n\t\t\t\t\t<ul className='post-ul'>\n\t\t\t\t\t\t{this.state.displayComments && comments.length > 0\n\t\t\t\t\t\t\t? comments.map(comment => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\t\t\t\t\tcomments={comments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommenting={commenting}\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayComments={this.displayComments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Post;\n\n// =============================================================================================================\n// voteOnPost = () => {\n// \tconst { currentUser, post } = this.props\n// \tconst { votes } = this.state\n// \tconsole.log('vote')\n// \tfetch(API + 'votes', {\n// \t\tmethod: 'POST',\n// \t\theaders: {'Authorization': `Bearer ${localStorage.getItem(currentUser)}`, 'Content-Type': 'application/json', Accept: 'application/json'},\n// \t\tbody: JSON.stringify({vote: {post: post, user: currentUser.id}})\n// \t}).then(res => res.json()).then(vote => { vote.errors ? alert(vote.errors) :\n// \t\tthis.setState({votes: [...votes, vote]})})\n// \t//\n// }\n\n// unvoteOnPost = (e) => {\n// \tconst { currentUser, post } = this.props\n// \tconsole.log('unvote')\n\n// \tfetch(API + 'votes/delete', {\n// \t\tmethod: 'POST',\n// \t\theaders: {'Authorization': `Bearer ${localStorage.getItem(currentUser)}`, 'Content-Type': 'application/json', Accept: 'application/json'},\n// \t\tbody: JSON.stringify({vote: {post: post, user: currentUser.id}})\n// \t}).then(res => res.json()).then(votes => this.setState({votes: votes})).then(this.countDownVotes())\n// }\n\n// countDownVotes = () => {\n// \tconst { votes } = this.state\n// \tif (votes.length > 0){\n// \t\tvotes.forEach(vote => {\n// \t\t\tif (vote.is_down_vote){\n// \t\t\t\tthis.setState({downVoteCount: this.state.downVoteCount++})\n// \t\t\t}\n// \t\t})\n// \t}\n// }\n"]},"metadata":{},"sourceType":"module"}