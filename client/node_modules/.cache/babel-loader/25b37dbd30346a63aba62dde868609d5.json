{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx\";\nimport React, { Component } from 'react';\nimport User from '../components/User';\nimport { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories } from '../actions/categoryActions';\nimport { fetchPosts } from '../actions/postActions';\nimport { connect } from 'react-redux';\n\nclass Feed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      votes: [],\n      downVoteCount: 0,\n      posts: [],\n      selectedPosts: [],\n      selectedCategories: null,\n      // isPoster: false,\n      // isMod: false,\n      categories: [],\n      postsFilter: [],\n      filterBool: false,\n      howToFilterBool: false,\n      updateBool: false,\n      rapidVoteCount: null\n    };\n\n    this.handleChange = async newSelection => {\n      await this.props.selectCategories(newSelection);\n      await this.handleSelect();\n    };\n\n    this.handleSelect = async () => {\n      await this.props.fetchPosts(); // const { selectedCategories, posts } = this.state;\n      // const { token } = this.props;\n      // if (!selectedCategories && posts) {\n      // \tfetch(API + 'posts', {\n      // \t\theaders: { Authorization: `Bearer ${token}` }\n      // \t})\n      // \t\t.then(res => res.json())\n      // \t\t.then(res => this.setState({ posts: res }));\n      // } else {\n      // \tawait this.setState({ selectedPosts: [] }); \n      // \tselectedCategories.forEach(category => {\n      // \t\tfetch(API + 'categories/' + `${category.value}`, {\n      // \t\t\theaders: { Authorization: `Bearer ${token}` }\n      // \t\t})\n      // \t\t\t.then(res => res.json())\n      // \t\t\t.then(res => this.setState({ selectedPosts: [...this.state.selectedPosts, res].flat()}))\n      // \t});\n      // }\n    };\n\n    this.voteOnPost = async (postID, e) => {\n      console.log('voteOnPost');\n      const currentUser = this.props.currentUser;\n      let placeHolder;\n      e === 'up' ? await fetch(API + 'votes', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('user-token')),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          vote: {\n            post_id: postID,\n            user_id: currentUser.user.id,\n            is_down_vote: false\n          }\n        })\n      }).then(res => res.json()).then(vote => {\n        vote.message ? placeHolder = vote.votes : placeHolder = vote;\n      }) : await fetch(API + 'votes/delete', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem('user-token')),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          vote: {\n            post_id: postID,\n            user_id: currentUser.user.id,\n            is_down_vote: true\n          }\n        })\n      }).then(res => res.json()).then(vote => {\n        vote.message ? placeHolder = vote.votes : placeHolder = vote;\n      });\n      await this.setState({\n        votes: placeHolder,\n        updateBool: true\n      });\n    };\n\n    this.postsFilter = async (postId, voteCount) => {\n      console.log(\"postsFilter\");\n      let placeHolder = [];\n      const _this$state = this.state,\n            postsFilter = _this$state.postsFilter,\n            posts = _this$state.posts;\n\n      if (postsFilter.length !== posts.length) {\n        let placeHolder = this.state.postsFilter;\n        await placeHolder.push([postId, voteCount]);\n        placeHolder.sort((a, b) => {\n          const post1 = a[1];\n          const post2 = b[1];\n          let comparison = 0;\n\n          if (post1 > post2) {\n            comparison = -1;\n          } else if (post1 < post2) {\n            comparison = 1;\n          }\n\n          return comparison;\n        });\n        this.setState({\n          postsFilter: placeHolder\n        });\n      } else if (this.state.updateBool) {\n        await placeHolder.push([postId, voteCount]);\n        placeHolder.sort((a, b) => {\n          const post1 = a[1];\n          const post2 = b[1];\n          let comparison = 0;\n\n          if (post1 > post2) {\n            comparison = -1;\n          } else if (post1 < post2) {\n            comparison = 1;\n          }\n\n          return comparison;\n        }); //   this.setState({filterBool: true})\n      }\n\n      this.setState({\n        postsFilter: placeHolder,\n        updateBool: false\n      });\n    };\n\n    this.filterPosts = async () => {\n      const _this$state2 = this.state,\n            postsFilter = _this$state2.postsFilter,\n            howToFilterBool = _this$state2.howToFilterBool,\n            selectedPosts = _this$state2.selectedPosts,\n            posts = _this$state2.posts;\n      let postsFiltered = (await howToFilterBool) ? postsFilter.sort((a, b) => {\n        const post1 = a[1];\n        const post2 = b[1];\n        let comparison = 0;\n\n        if (post1 > post2) {\n          comparison = 1;\n        } else if (post1 < post2) {\n          comparison = -1;\n        }\n\n        return comparison;\n      }) : postsFilter.sort((a, b) => {\n        const post1 = a[1];\n        const post2 = b[1];\n        let comparison = 0;\n\n        if (post1 > post2) {\n          comparison = -1;\n        } else if (post1 < post2) {\n          comparison = 1;\n        }\n\n        return comparison;\n      });\n\n      if (selectedPosts.length !== 0) {\n        console.log('if');\n        let filteredPosts = await postsFiltered.map((post1, i) => {\n          return selectedPosts.filter(post => post.id === post1[0]);\n        }).flat();\n        await this.setState({\n          selectedPosts: filteredPosts,\n          filterBool: true,\n          howToFilterBool: !howToFilterBool\n        });\n      } else {\n        console.log(\"else\");\n        let filteredPosts = await postsFiltered.map((post1, i) => {\n          return posts.filter(post => post.id === post1[0]);\n        }).flat();\n        await this.setState({\n          posts: filteredPosts,\n          filterBool: true,\n          howToFilterBool: !howToFilterBool\n        });\n      }\n    };\n\n    this.resetFilterBool = async () => {\n      console.log(\"resetFilterBool\");\n      await this.setState({\n        filterBool: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.fetchCategories();\n    await fetch(API + 'votes').then(res => res.json()).then(votes => this.setState({\n      votes: votes\n    }));\n    await this.handleSelect();\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          selectedCategories = _this$state3.selectedCategories,\n          selectedPosts = _this$state3.selectedPosts,\n          votes = _this$state3.votes,\n          howToFilterBool = _this$state3.howToFilterBool,\n          posts = _this$state3.posts,\n          categories = _this$state3.categories;\n    const _this$props = this.props,\n          token = _this$props.token,\n          currentUser = _this$props.currentUser,\n          logOut = _this$props.logOut;\n\n    if (this.state.posts.length > 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Header, {\n        categories: this.state.categories,\n        selectedCategories: selectedCategories,\n        handleChange: this.handleChange,\n        token: token,\n        currentUser: currentUser,\n        handleSelect: this.handleSelect,\n        filterPosts: this.filterPosts,\n        howToFilterBool: howToFilterBool,\n        logOut: logOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(User, {\n        currentUser: currentUser,\n        posts: posts,\n        votes: votes,\n        categories: categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"posts-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, selectedPosts.length > 0 ? this.state.selectedPosts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        });\n      }) : this.props.posts.map((post, i) => {\n        return React.createElement(Post, {\n          key: i,\n          post: post,\n          votes: votes,\n          currentUser: currentUser,\n          voteOnPost: this.voteOnPost,\n          postsFilter: this.postsFilter,\n          filterBool: this.state.filterBool,\n          updateBool: this.state.updateBool,\n          resetFilterBool: this.resetFilterBool,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        });\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Header, {\n        handleSelect: this.handleSelect,\n        updatePosts: this.updatePosts,\n        categories: this.state.categories,\n        selectedCategories: selectedCategories,\n        handleChange: this.handleChange,\n        token: token,\n        currentUser: currentUser,\n        logOut: logOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"lodaing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Loading Posts...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.posts,\n  catgories: state.categories.categories,\n  selectedCategories: state.categories.selectCategories\n});\n\nexport default connect(mapStateToProps, {\n  fetchCategories,\n  fetchPosts,\n  selectCategories\n})(Feed);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/containers/Feed.jsx"],"names":["React","Component","User","API","Post","Header","selectCategories","fetchCategories","fetchPosts","connect","Feed","state","votes","downVoteCount","posts","selectedPosts","selectedCategories","categories","postsFilter","filterBool","howToFilterBool","updateBool","rapidVoteCount","handleChange","newSelection","props","handleSelect","voteOnPost","postID","e","console","log","currentUser","placeHolder","fetch","method","headers","Authorization","localStorage","getItem","Accept","body","JSON","stringify","vote","post_id","user_id","user","id","is_down_vote","then","res","json","message","setState","postId","voteCount","length","push","sort","a","b","post1","post2","comparison","filterPosts","postsFiltered","filteredPosts","map","i","filter","post","flat","resetFilterBool","componentDidMount","render","token","logOut","updatePosts","mapStateToProps","catgories"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAiD,4BAAjD;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,aAAa,EAAE,CAFR;AAGPC,MAAAA,KAAK,EAAE,EAHA;AAIPC,MAAAA,aAAa,EAAE,EAJR;AAKPC,MAAAA,kBAAkB,EAAE,IALb;AAMP;AACA;AACAC,MAAAA,UAAU,EAAE,EARL;AASPC,MAAAA,WAAW,EAAE,EATN;AAUPC,MAAAA,UAAU,EAAE,KAVL;AAWPC,MAAAA,eAAe,EAAE,KAXV;AAYPC,MAAAA,UAAU,EAAC,KAZJ;AAaPC,MAAAA,cAAc,EAAE;AAbT,KADoB;;AAAA,SAyB5BC,YAzB4B,GAyBb,MAAMC,YAAN,IAAsB;AACpC,YAAM,KAAKC,KAAL,CAAWnB,gBAAX,CAA4BkB,YAA5B,CAAN;AACA,YAAM,KAAKE,YAAL,EAAN;AACA,KA5B2B;;AAAA,SA8B5BA,YA9B4B,GA8Bb,YAAY;AAC1B,YAAM,KAAKD,KAAL,CAAWjB,UAAX,EAAN,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAlD2B;;AAAA,SAoD5BmB,UApD4B,GAoDf,OAAOC,MAAP,EAAeC,CAAf,KAAqB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AADiC,YAEzBC,WAFyB,GAET,KAAKP,KAFI,CAEzBO,WAFyB;AAGjC,UAAIC,WAAJ;AACAJ,MAAAA,CAAC,KAAK,IAAN,GAEC,MAAMK,KAAK,CAAC/B,GAAG,GAAG,OAAP,EAAgB;AACzBgC,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,OAAO,EAAE;AACRC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ,CADL;AAER,0BAAgB,kBAFR;AAGRC,UAAAA,MAAM,EAAE;AAHA,SAFgB;AAOzBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,OAAO,EAAEjB,MAAX;AAAmBkB,YAAAA,OAAO,EAAEd,WAAW,CAACe,IAAZ,CAAiBC,EAA7C;AAAiDC,YAAAA,YAAY,EAAE;AAA/D;AAAR,SAAf;AAPmB,OAAhB,CAAL,CASHC,IATG,CASEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATT,EAUHF,IAVG,CAUEN,IAAI,IAAI;AACbA,QAAAA,IAAI,CAACS,OAAL,GACApB,WAAW,GAAGW,IAAI,CAAChC,KADnB,GAGAqB,WAAW,GAAGW,IAHd;AAIA,OAfG,CAFP,GAmBC,MAAMV,KAAK,CAAC/B,GAAG,GAAG,cAAP,EAAuB;AAChCgC,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,OAAO,EAAE;AACRC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ,CADL;AAER,0BAAgB,kBAFR;AAGRC,UAAAA,MAAM,EAAE;AAHA,SAFuB;AAOhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,OAAO,EAAEjB,MAAX;AAAmBkB,YAAAA,OAAO,EAAEd,WAAW,CAACe,IAAZ,CAAiBC,EAA7C;AAAiDC,YAAAA,YAAY,EAAE;AAA/D;AAAR,SAAf;AAP0B,OAAvB,CAAL,CASHC,IATG,CASEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATT,EAUHF,IAVG,CAUGN,IAAI,IACV;AACAA,QAAAA,IAAI,CAACS,OAAL,GACApB,WAAW,GAAGW,IAAI,CAAChC,KADnB,GAGAqB,WAAW,GAAGW,IAHd;AAIA,OAhBG,CAnBP;AAqCE,YAAM,KAAKU,QAAL,CAAc;AAAE1C,QAAAA,KAAK,EAAEqB,WAAT;AAAsBZ,QAAAA,UAAU,EAAC;AAAjC,OAAd,CAAN;AACF,KA9F2B;;AAAA,SAgG5BH,WAhG4B,GAgGd,OAAOqC,MAAP,EAAeC,SAAf,KAA6B;AAC1C1B,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIE,WAAW,GAAG,EAAlB;AAF0C,0BAGX,KAAKtB,KAHM;AAAA,YAGlCO,WAHkC,eAGlCA,WAHkC;AAAA,YAGrBJ,KAHqB,eAGrBA,KAHqB;;AAI1C,UAAII,WAAW,CAACuC,MAAZ,KAAuB3C,KAAK,CAAC2C,MAAjC,EAAyC;AACzC,YAAIxB,WAAW,GAAG,KAAKtB,KAAL,CAAWO,WAA7B;AACA,cAAMe,WAAW,CAACyB,IAAZ,CAAiB,CAACH,MAAD,EAASC,SAAT,CAAjB,CAAN;AACAvB,QAAAA,WAAW,CAAC0B,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,gBAAMC,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AACA,gBAAMG,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AAEA,cAAIG,UAAU,GAAG,CAAjB;;AACA,cAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACjBC,YAAAA,UAAU,GAAG,CAAC,CAAd;AACD,WAFD,MAEO,IAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACxBC,YAAAA,UAAU,GAAG,CAAb;AACD;;AACD,iBAAOA,UAAP;AACE,SAXH;AAYA,aAAKV,QAAL,CAAc;AAACpC,UAAAA,WAAW,EAAEe;AAAd,SAAd;AACC,OAhBD,MAgBO,IAAI,KAAKtB,KAAL,CAAWU,UAAf,EAA0B;AAChC,cAAMY,WAAW,CAACyB,IAAZ,CAAiB,CAACH,MAAD,EAASC,SAAT,CAAjB,CAAN;AACDvB,QAAAA,WAAW,CAAC0B,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,gBAAMC,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AACA,gBAAMG,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AAEA,cAAIG,UAAU,GAAG,CAAjB;;AACA,cAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACjBC,YAAAA,UAAU,GAAG,CAAC,CAAd;AACD,WAFD,MAEO,IAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACxBC,YAAAA,UAAU,GAAG,CAAb;AACD;;AACD,iBAAOA,UAAP;AACE,SAXH,EAFiC,CAcjC;AACC;;AACD,WAAKV,QAAL,CAAc;AAACpC,QAAAA,WAAW,EAAEe,WAAd;AAA2BZ,QAAAA,UAAU,EAAC;AAAtC,OAAd;AACA,KArI2B;;AAAA,SAuI5B4C,WAvI4B,GAuId,YAAY;AAAA,2BACuC,KAAKtD,KAD5C;AAAA,YACjBO,WADiB,gBACjBA,WADiB;AAAA,YACJE,eADI,gBACJA,eADI;AAAA,YACaL,aADb,gBACaA,aADb;AAAA,YAC4BD,KAD5B,gBAC4BA,KAD5B;AAEzB,UAAIoD,aAAa,GAAG,OAAM9C,eAAN,IAAwBF,WAAW,CAACyC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtE,cAAMC,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AACA,cAAMG,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AAEA,YAAIG,UAAU,GAAG,CAAjB;;AACA,YAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACjBC,UAAAA,UAAU,GAAG,CAAb;AACD,SAFD,MAEO,IAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACxBC,UAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,eAAOA,UAAP;AACE,OAXyC,CAAxB,GAWb9C,WAAW,CAACyC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjC,cAAMC,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AACA,cAAMG,KAAK,GAAGF,CAAC,CAAC,CAAD,CAAf;AAEA,YAAIG,UAAU,GAAG,CAAjB;;AACA,YAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACjBC,UAAAA,UAAU,GAAG,CAAC,CAAd;AACD,SAFD,MAEO,IAAIF,KAAK,GAAGC,KAAZ,EAAmB;AACxBC,UAAAA,UAAU,GAAG,CAAb;AACD;;AACD,eAAOA,UAAP;AACE,OAXI,CAXP;;AAuBA,UAAIjD,aAAa,CAAC0C,MAAd,KAAyB,CAA7B,EAA+B;AAC/B3B,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACC,YAAIoC,aAAa,GAAG,MAAMD,aAAa,CAACE,GAAd,CAAkB,CAACN,KAAD,EAAQO,CAAR,KAAc;AACzD,iBAAOtD,aAAa,CAACuD,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACvB,EAAL,KAAYc,KAAK,CAAC,CAAD,CAA9C,CAAP;AACA,SAFyB,EAEvBU,IAFuB,EAA1B;AAGA,cAAM,KAAKlB,QAAL,CAAc;AAACvC,UAAAA,aAAa,EAAEoD,aAAhB;AAA+BhD,UAAAA,UAAU,EAAE,IAA3C;AAAiDC,UAAAA,eAAe,EAAE,CAACA;AAAnE,SAAd,CAAN;AACA,OAND,MAMO;AACPU,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,YAAIoC,aAAa,GAAG,MAAMD,aAAa,CAACE,GAAd,CAAkB,CAACN,KAAD,EAAQO,CAAR,KAAc;AACzD,iBAAOvD,KAAK,CAACwD,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACvB,EAAL,KAAYc,KAAK,CAAC,CAAD,CAAtC,CAAP;AACA,SAFyB,EAEvBU,IAFuB,EAA1B;AAGA,cAAM,KAAKlB,QAAL,CAAc;AAACxC,UAAAA,KAAK,EAAEqD,aAAR;AAAuBhD,UAAAA,UAAU,EAAE,IAAnC;AAAyCC,UAAAA,eAAe,EAAE,CAACA;AAA3D,SAAd,CAAN;AAAiG;AACjG,KA5K2B;;AAAA,SA+K5BqD,eA/K4B,GA+KV,YAAY;AAC7B3C,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,YAAM,KAAKuB,QAAL,CAAc;AAACnC,QAAAA,UAAU,EAAE;AAAb,OAAd,CAAN;AACA,KAlL2B;AAAA;;AAiB5B,QAAMuD,iBAAN,GAA0B;AACzB,UAAM,KAAKjD,KAAL,CAAWlB,eAAX,EAAN;AACA,UAAM2B,KAAK,CAAC/B,GAAG,GAAG,OAAP,CAAL,CACJ+C,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECtC,KAAK,IAAI,KAAK0C,QAAL,CAAc;AAAE1C,MAAAA,KAAK,EAAEA;AAAT,KAAd,CAFV,CAAN;AAGA,UAAM,KAAKc,YAAL,EAAN;AACA;;AA6JDiD,EAAAA,MAAM,GAAG;AAAA,yBACiF,KAAKhE,KADtF;AAAA,UACAK,kBADA,gBACAA,kBADA;AAAA,UACoBD,aADpB,gBACoBA,aADpB;AAAA,UACmCH,KADnC,gBACmCA,KADnC;AAAA,UAC0CQ,eAD1C,gBAC0CA,eAD1C;AAAA,UAC2DN,KAD3D,gBAC2DA,KAD3D;AAAA,UACkEG,UADlE,gBACkEA,UADlE;AAAA,wBAE+B,KAAKQ,KAFpC;AAAA,UAEAmD,KAFA,eAEAA,KAFA;AAAA,UAEO5C,WAFP,eAEOA,WAFP;AAAA,UAEoB6C,MAFpB,eAEoBA,MAFpB;;AAGR,QAAI,KAAKlE,KAAL,CAAWG,KAAX,CAAiB2C,MAAjB,GAA0B,CAA9B,EAAiC;AAChC,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACC,QAAA,UAAU,EAAE,KAAK9C,KAAL,CAAWM,UADxB;AAEC,QAAA,kBAAkB,EAAED,kBAFrB;AAGC,QAAA,YAAY,EAAE,KAAKO,YAHpB;AAIC,QAAA,KAAK,EAAEqD,KAJR;AAKC,QAAA,WAAW,EAAE5C,WALd;AAMC,QAAA,YAAY,EAAE,KAAKN,YANpB;AAOC,QAAA,WAAW,EAAE,KAAKuC,WAPnB;AAQC,QAAA,eAAe,EAAE7C,eARlB;AASC,QAAA,MAAM,EAAEyD,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAYC,oBAAC,IAAD;AAAM,QAAA,WAAW,EAAE7C,WAAnB;AAAgC,QAAA,KAAK,EAAElB,KAAvC;AAA8C,QAAA,KAAK,EAAEF,KAArD;AAA4D,QAAA,UAAU,EAAEK,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZD,EAaC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCF,aAAa,CAAC0C,MAAd,GAAuB,CAAvB,GACE,KAAK9C,KAAL,CAAWI,aAAX,CAAyBqD,GAAzB,CAA6B,CAACG,IAAD,EAAOF,CAAP,KAAa;AAC1C,eACC,oBAAC,IAAD;AACC,UAAA,GAAG,EAAEA,CADN;AAEC,UAAA,IAAI,EAAEE,IAFP;AAGC,UAAA,KAAK,EAAE3D,KAHR;AAIC,UAAA,WAAW,EAAEoB,WAJd;AAKC,UAAA,UAAU,EAAE,KAAKL,UALlB;AAMC,UAAA,WAAW,EAAE,KAAKT,WANnB;AAOC,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,UAPxB;AAQC,UAAA,UAAU,EAAE,KAAKR,KAAL,CAAWU,UARxB;AASC,UAAA,eAAe,EAAE,KAAKoD,eATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaC,OAdD,CADF,GAgBE,KAAKhD,KAAL,CAAWX,KAAX,CAAiBsD,GAAjB,CAAqB,CAACG,IAAD,EAAOF,CAAP,KAAa;AAClC,eACC,oBAAC,IAAD;AACC,UAAA,GAAG,EAAEA,CADN;AAEC,UAAA,IAAI,EAAEE,IAFP;AAGC,UAAA,KAAK,EAAE3D,KAHR;AAIC,UAAA,WAAW,EAAEoB,WAJd;AAKC,UAAA,UAAU,EAAE,KAAKL,UALlB;AAMC,UAAA,WAAW,EAAE,KAAKT,WANnB;AAOC,UAAA,UAAU,EAAE,KAAKP,KAAL,CAAWQ,UAPxB;AAQC,UAAA,UAAU,EAAE,KAAKR,KAAL,CAAWU,UARxB;AASC,UAAA,eAAe,EAAE,KAAKoD,eATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaC,OAdD,CAjBH,CAbD,CADD;AAiDA,KAlDD,MAkDO;AACN,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACC,QAAA,YAAY,EAAE,KAAK/C,YADpB;AAEC,QAAA,WAAW,EAAE,KAAKoD,WAFnB;AAGC,QAAA,UAAU,EAAE,KAAKnE,KAAL,CAAWM,UAHxB;AAIC,QAAA,kBAAkB,EAAED,kBAJrB;AAKC,QAAA,YAAY,EAAE,KAAKO,YALpB;AAMC,QAAA,KAAK,EAAEqD,KANR;AAOC,QAAA,WAAW,EAAE5C,WAPd;AAQC,QAAA,MAAM,EAAE6C,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXD,EAYC;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZD,CADD;AAiBA;AACD;;AA5P2B;;AA+P7B,MAAME,eAAe,GAAGpE,KAAK,KAAK;AACjCG,EAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYA,KADc;AAEjCkE,EAAAA,SAAS,EAAErE,KAAK,CAACM,UAAN,CAAiBA,UAFK;AAGjCD,EAAAA,kBAAkB,EAAEL,KAAK,CAACM,UAAN,CAAiBX;AAHJ,CAAL,CAA7B;;AAMA,eAAeG,OAAO,CAACsE,eAAD,EAAkB;AAAExE,EAAAA,eAAF;AAAmBC,EAAAA,UAAnB;AAA+BF,EAAAA;AAA/B,CAAlB,CAAP,CAA4EI,IAA5E,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport User from '../components/User';\nimport { API } from './MainPage';\nimport Post from '../components/Post';\nimport Header from './Header';\nimport { selectCategories, fetchCategories} from '../actions/categoryActions'\nimport { fetchPosts } from '../actions/postActions'\nimport { connect } from 'react-redux'\n\nclass Feed extends Component {\n\tstate = {\n\t\tvotes: [],\n\t\tdownVoteCount: 0,\n\t\tposts: [],\n\t\tselectedPosts: [],\n\t\tselectedCategories: null,\n\t\t// isPoster: false,\n\t\t// isMod: false,\n\t\tcategories: [],\n\t\tpostsFilter: [],\n\t\tfilterBool: false,\n\t\thowToFilterBool: false,\n\t\tupdateBool:false,\n\t\trapidVoteCount: null\n\t};\n\n\tasync componentDidMount() {\n\t\tawait this.props.fetchCategories()\n\t\tawait fetch(API + 'votes')\n\t\t\t.then(res => res.json())\n\t\t\t.then(votes => this.setState({ votes: votes }));\n\t\tawait this.handleSelect();\n\t}\n\n\thandleChange = async newSelection => {\n\t\tawait this.props.selectCategories(newSelection);\n\t\tawait this.handleSelect();\n\t};\n\n\thandleSelect = async () => {\n\t\tawait this.props.fetchPosts()\n\t\t// const { selectedCategories, posts } = this.state;\n\t\t// const { token } = this.props;\n\t\t// if (!selectedCategories && posts) {\n\t\t// \tfetch(API + 'posts', {\n\t\t// \t\theaders: { Authorization: `Bearer ${token}` }\n\t\t// \t})\n\t\t// \t\t.then(res => res.json())\n\t\t// \t\t.then(res => this.setState({ posts: res }));\n\t\t// } else {\n\t\t// \tawait this.setState({ selectedPosts: [] }); \n\t\t// \tselectedCategories.forEach(category => {\n\t\t// \t\tfetch(API + 'categories/' + `${category.value}`, {\n\t\t// \t\t\theaders: { Authorization: `Bearer ${token}` }\n\t\t// \t\t})\n\t\t// \t\t\t.then(res => res.json())\n\t\t// \t\t\t.then(res => this.setState({ selectedPosts: [...this.state.selectedPosts, res].flat()}))\n\t\t// \t});\n\t\t// }\n\t};\n\n\tvoteOnPost = async (postID, e) => {\n\t\tconsole.log('voteOnPost')\n\t\tconst { currentUser } = this.props;\n\t\tlet placeHolder;\n\t\te === 'up'\n\t\t\t? \n\t\t\tawait fetch(API + 'votes', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem('user-token')}`,\n\t\t\t\t\t\t'Content-Type': 'application/json',\t\n\t\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({ vote: { post_id: postID, user_id: currentUser.user.id, is_down_vote: false } })\n\t\t\t  })\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(vote => {\n\t\t\t\t\t\tvote.message ? \n\t\t\t\t\t\tplaceHolder = vote.votes\n\t\t\t\t\t\t: \n\t\t\t\t\t\tplaceHolder = vote;\n\t\t\t\t\t})\n\t\t\t: \n\t\t\tawait fetch(API + 'votes/delete', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${localStorage.getItem('user-token')}`,\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({ vote: { post_id: postID, user_id: currentUser.user.id, is_down_vote: true } })\n\t\t\t  })\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then( vote =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\tvote.message ? \n\t\t\t\t\t\tplaceHolder = vote.votes\n\t\t\t\t\t\t:\n\t\t\t\t\t\tplaceHolder = vote\n\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\tawait this.setState({ votes: placeHolder, updateBool:true})\n\t};\n\n\tpostsFilter = async (postId, voteCount) => {\n\t\tconsole.log(\"postsFilter\")\n\t\tlet placeHolder = [];\n\t\tconst { postsFilter, posts } = this.state\n\t\tif (postsFilter.length !== posts.length) {\n\t\tlet placeHolder = this.state.postsFilter\n\t\tawait placeHolder.push([postId, voteCount])\n\t\tplaceHolder.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\tthis.setState({postsFilter: placeHolder})\n\t\t} else if (this.state.updateBool){\n\t\t\tawait placeHolder.push([postId, voteCount])\n\t\tplaceHolder.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\t//   this.setState({filterBool: true})\n\t\t}\n\t\tthis.setState({postsFilter: placeHolder, updateBool:false})\n\t}\n\n\tfilterPosts = async () => {\n\t\tconst { postsFilter, howToFilterBool, selectedPosts, posts  } = this.state\n\t\tlet postsFiltered = await howToFilterBool ? postsFilter.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = 1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = -1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  }) : postsFilter.sort((a, b) => {\n\t\t\tconst post1 = a[1]\n\t\t\tconst post2 = b[1]\n\n\t\t\tlet comparison = 0;\n\t\t\tif (post1 > post2) {\n\t\t\t  comparison = -1\n\t\t\t} else if (post1 < post2) {\n\t\t\t  comparison = 1\n\t\t\t}\n\t\t\treturn comparison;\n\t\t  })\n\t\tif (selectedPosts.length !== 0){\n\t\tconsole.log('if')\n\t\t\tlet filteredPosts = await postsFiltered.map((post1, i) => {\n\t\t\t\treturn selectedPosts.filter(post => post.id === post1[0])\n\t\t\t}).flat()\n\t\t\tawait this.setState({selectedPosts: filteredPosts, filterBool: true, howToFilterBool: !howToFilterBool})\n\t\t} else {\n\t\tconsole.log(\"else\")\n\t\tlet filteredPosts = await postsFiltered.map((post1, i) => {\n\t\t\treturn posts.filter(post => post.id === post1[0])\n\t\t}).flat()\n\t\tawait this.setState({posts: filteredPosts, filterBool: true, howToFilterBool: !howToFilterBool})}\n\t}\n\n\n\tresetFilterBool = async () => {\n\t\tconsole.log(\"resetFilterBool\")\n\t\tawait this.setState({filterBool: false})\n\t}\n\n\trender() {\n\t\tconst { selectedCategories, selectedPosts, votes, howToFilterBool, posts, categories } = this.state;\n\t\tconst { token, currentUser, logOut } = this.props;\n\t\tif (this.state.posts.length > 0) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tcategories={this.state.categories}\n\t\t\t\t\t\tselectedCategories={selectedCategories}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tfilterPosts={this.filterPosts}\n\t\t\t\t\t\thowToFilterBool={howToFilterBool}\n\t\t\t\t\t\tlogOut={logOut}\n\t\t\t\t\t/>\n\t\t\t\t\t<User currentUser={currentUser} posts={posts} votes={votes} categories={categories}/>\n\t\t\t\t\t<div className='posts-container'>\n\t\t\t\t\t{selectedPosts.length > 0\n\t\t\t\t\t\t? this.state.selectedPosts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: this.props.posts.map((post, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\tvotes={votes}\n\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\tvoteOnPost={this.voteOnPost}\n\t\t\t\t\t\t\t\t\t\tpostsFilter={this.postsFilter}\n\t\t\t\t\t\t\t\t\t\tfilterBool={this.state.filterBool}\n\t\t\t\t\t\t\t\t\t\tupdateBool={this.state.updateBool}\n\t\t\t\t\t\t\t\t\t\tresetFilterBool={this.resetFilterBool}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t  })}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Header\n\t\t\t\t\t\thandleSelect={this.handleSelect}\n\t\t\t\t\t\tupdatePosts={this.updatePosts}\n\t\t\t\t\t\tcategories={this.state.categories}\n\t\t\t\t\t\tselectedCategories={selectedCategories}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\ttoken={token}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tlogOut={logOut}\n\t\t\t\t\t/> \n\t\t\t\t\t<br/>\n\t\t\t\t\t<h1 className=\"lodaing\">Loading Posts...</h1>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tposts: state.posts.posts,\n\tcatgories: state.categories.categories,\n\tselectedCategories: state.categories.selectCategories\n})\n\nexport default connect(mapStateToProps, { fetchCategories, fetchPosts, selectCategories })(Feed)\n"]},"metadata":{},"sourceType":"module"}