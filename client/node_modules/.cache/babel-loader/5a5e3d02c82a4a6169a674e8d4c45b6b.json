{"ast":null,"code":"var _jsxFileName = \"/Users/andershornor/Class_Work/ReadThat1/client/src/components/Post.jsx\";\nimport React, { Component } from 'react';\nimport defaultImage from '../images/logo.png';\nimport { API } from '../containers/MainPage';\nimport { connect } from 'react-redux';\nimport NewComment from './forms/NewComment';\nimport Comment from './Comment'; // import { newComment, fetchComments } from '../actions/commentActions'\n\nimport { createVote, voteCount } from '../actions/voteActions';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newComment: '',\n      comments: [],\n      postsVotes: [],\n      displayComments: false,\n      commenting: false,\n      prevState: [],\n      hasUpVoted: false,\n      hasDownVoted: false,\n      renderModalBool: false\n    };\n\n    this.commentOnPost = () => {\n      const commenting = this.state.commenting;\n      this.setState({\n        commenting: !commenting\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        newComment: e.target.value\n      });\n    };\n\n    this.handleSubmit = (e, key, value) => {\n      e.preventDefault();\n      this.state.newComment.length > 0 ? this.postComment(key, value) : window.alert('No Empty Comments');\n    };\n\n    this.postComment = (key, value) => {\n      const _this$state = this.state,\n            comments = _this$state.comments,\n            newComment = _this$state.newComment,\n            commenting = _this$state.commenting;\n      const currentUser = this.props.currentUser;\n      fetch(API + 'comments', {\n        method: 'POST',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem(currentUser.user.id)),\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          comment: {\n            content: newComment,\n            user_id: currentUser.user.id,\n            [key]: value\n          }\n        })\n      }).then(res => res.json()).then(comment => {\n        comment.errors ? alert(comment.errors) : this.setState({\n          comments: [...comments, comment]\n        });\n      }).then(this.setState({\n        commenting: !commenting\n      }));\n    };\n\n    this.displayComments = async () => {\n      const post = this.props.post;\n      await fetch(API + 'comments/' + \"\".concat(post.id)).then(res => res.json()).then(comments => this.setState({\n        comments: comments\n      }));\n      this.setState({\n        displayComments: !this.state.displayComments\n      });\n\n      if (this.state.comments.length === 0) {\n        alert(\"Currently No Comments...Be the First to Write One!\");\n      }\n    };\n\n    this.rapidVoteIncrement = async e => {\n      const _this$props = this.props,\n            createVote = _this$props.createVote,\n            voteCount = _this$props.voteCount,\n            post = _this$props.post;\n      await createVote(post.id, e.target.name);\n      await voteCount(\"post\");\n    };\n\n    this.renderModal = () => {\n      this.setState({\n        renderModalBool: !this.state.renderModalBool\n      });\n    };\n  }\n\n  async componentDidMount() {}\n\n  render() {\n    const _this$props$post = this.props.post,\n          img = _this$props$post.img,\n          title = _this$props$post.title,\n          content = _this$props$post.content,\n          link = _this$props$post.link,\n          uploadedFile = _this$props$post.uploadedFile,\n          id = _this$props$post.id;\n    const _this$props2 = this.props,\n          post = _this$props2.post,\n          currentUser = _this$props2.currentUser,\n          countedVotes = _this$props2.countedVotes;\n    const _this$state2 = this.state,\n          commenting = _this$state2.commenting,\n          comments = _this$state2.comments;\n    let image;\n\n    if (!img && !uploadedFile) {\n      image = defaultImage;\n    } else if (!img && uploadedFile) {\n      image = uploadedFile;\n    } else {\n      image = defaultImage;\n    }\n\n    return this.state.renderModalBool ? React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, title, React.createElement(\"button\", {\n      className: \"close-button\",\n      onClick: e => this.renderModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" X \"))), React.createElement(\"div\", {\n      className: \"contents-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-post-img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"modal-post-img\",\n      src: image,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, content, link)), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Doots: \", countedVotes[\"post\"][post.id] ? countedVotes[\"post\"][post.id] : 0), React.createElement(\"button\", {\n      name: \"up\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\u25B2\"), React.createElement(\"button\", {\n      name: \"down\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"\\u25BC\"), React.createElement(\"button\", {\n      onClick: e => this.commentOnPost(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Comment\"), commenting ? React.createElement(NewComment, {\n      variableKey: 'post_id',\n      value: id,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      commentOnPost: this.commentOnPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: e => this.displayComments(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Display Comments\"), React.createElement(\"ul\", {\n      className: \"post-ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.displayComments && comments.length > 0 ? comments.map(comment => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        comment: comment,\n        comments: comments,\n        commenting: commenting,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        displayComments: this.displayComments,\n        commentOnPost: this.commentOnPost,\n        currentUser: currentUser,\n        post: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }));\n    }) : null)))) : React.createElement(\"div\", {\n      className: \"post-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"contents-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"post-img\",\n      src: image,\n      alt: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, content, link)), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Doots: \", countedVotes[\"post\"][post.id] ? countedVotes[\"post\"][post.id] : 0), React.createElement(\"button\", {\n      name: \"up\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\u25B2\"), React.createElement(\"button\", {\n      name: \"down\",\n      onClick: e => this.rapidVoteIncrement(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"\\u25BC\"), React.createElement(\"button\", {\n      onClick: e => this.commentOnPost(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Comment\"), commenting ? React.createElement(NewComment, {\n      variableKey: 'post_id',\n      value: id,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      commentOnPost: this.commentOnPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }) : null, React.createElement(\"button\", {\n      onClick: e => this.displayComments(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Display Comments\"), React.createElement(\"button\", {\n      onClick: e => this.renderModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Enlarge Post\"), React.createElement(\"ul\", {\n      className: \"post-ul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.displayComments && comments.length > 0 ? comments.map(comment => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        comment: comment,\n        comments: comments,\n        commenting: commenting,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        displayComments: this.displayComments,\n        commentOnPost: this.commentOnPost,\n        currentUser: currentUser,\n        post: post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }));\n    }) : null)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  votes: state.votes.votes,\n  countedVotes: state.votes.voteCount\n});\n\nexport default connect(mapStateToProps, {\n  createVote,\n  voteCount\n})(Post);","map":{"version":3,"sources":["/Users/andershornor/Class_Work/ReadThat1/client/src/components/Post.jsx"],"names":["React","Component","defaultImage","API","connect","NewComment","Comment","createVote","voteCount","Post","state","newComment","comments","postsVotes","displayComments","commenting","prevState","hasUpVoted","hasDownVoted","renderModalBool","commentOnPost","setState","handleChange","e","target","value","handleSubmit","key","preventDefault","length","postComment","window","alert","currentUser","props","fetch","method","headers","Authorization","localStorage","getItem","user","id","Accept","body","JSON","stringify","comment","content","user_id","then","res","json","errors","post","rapidVoteIncrement","name","renderModal","componentDidMount","render","img","title","link","uploadedFile","countedVotes","image","map","mapStateToProps","votes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport defaultImage from '../images/logo.png';\nimport { API } from '../containers/MainPage';\nimport { connect } from 'react-redux'\nimport NewComment from './forms/NewComment';\nimport Comment from './Comment';\n// import { newComment, fetchComments } from '../actions/commentActions'\nimport { createVote, voteCount } from '../actions/voteActions'\n\nclass Post extends Component {\n\tstate = {\n\t\tnewComment: '',\n\t\tcomments: [],\n\t\tpostsVotes: [],\n\t\tdisplayComments: false,\n\t\tcommenting: false,\n\t\tprevState: [],\n\t\thasUpVoted: false,\n\t\thasDownVoted: false,\n\t\trenderModalBool: false\n\t};\n\n\tasync componentDidMount() {\t\n\n\t}\n\n\tcommentOnPost = () => {\n\t\tconst { commenting } = this.state;\n\t\tthis.setState({ commenting: !commenting });\n\t};\n\n\thandleChange = e => {\n\t\tthis.setState({ newComment: e.target.value });\n\t};\n\n\thandleSubmit = (e, key, value) => {\n\t\te.preventDefault();\n\t\tthis.state.newComment.length > 0\n\t\t\t? this.postComment(key, value)\n\t\t\t: window.alert('No Empty Comments');\n\t};\n\n\tpostComment = (key, value) => {\n\t\tconst { comments, newComment, commenting } = this.state;\n\t\tconst { currentUser } = this.props;\n\t\tfetch(API + 'comments', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${localStorage.getItem(currentUser.user.id)}`,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcomment: { content: newComment, user_id: currentUser.user.id, [key]: value }\n\t\t\t})\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(comment => {\n\t\t\t\tcomment.errors\n\t\t\t\t\t? alert(comment.errors)\n\t\t\t\t\t: this.setState({ comments: [...comments, comment] });\n\t\t\t})\n\t\t\t.then(this.setState({ commenting: !commenting }));\n\t};\n\n\tdisplayComments = async () => {\n\t\tconst { post } = this.props;\n\t\tawait fetch(API + 'comments/' + `${post.id}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(comments => this.setState({ comments: comments }));\n\t\tthis.setState({ displayComments: !this.state.displayComments });\n\t\tif (this.state.comments.length === 0){\n\t\t\talert(\"Currently No Comments...Be the First to Write One!\")\n\t\t} \n\t};\n\n\trapidVoteIncrement = async (e) => {\n\t\tconst { createVote, voteCount, post } = this.props;\n\t\tawait createVote(post.id, e.target.name)\n\t\tawait voteCount(\"post\")\n\t};\n\n\trenderModal = () => {\n\t\tthis.setState({renderModalBool: !this.state.renderModalBool})\n\t}\n\n\trender() {\n\t\tconst { img, title, content, link, uploadedFile, id} = this.props.post;\n\t\tconst { post, currentUser, countedVotes} = this.props\n\t\tconst { commenting, comments  } = this.state;\n\t\tlet image;\n\t\tif (!img && !uploadedFile) {\n\t\t\timage = defaultImage;\n\t\t} else if(!img && uploadedFile) {\n\t\t\timage = uploadedFile;\n\t\t} else {\n\t\t\timage = defaultImage\n\t\t}\n\t\treturn (\n\t\t\tthis.state.renderModalBool ? \n\t\t\t<div className=\"modal\">\n\t\t\t\t<div className='modal-content-post'>\n\t\t\t\t\t<span>\n\t\t\t\t\t<div className='title-container'>{title}\n\t\t\t\t\t\t<button className='close-button' onClick={e => this.renderModal()}> X </button>\n\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className='contents-container'>\n\t\t\t\t\t<div className='modal-post-img-container'>\n\t\t\t\t\t<img className='modal-post-img' src={image} alt={title} />\n\t\t\t\t</div>\n\t\t\t\t<div className='content-container'>\n\t\t\t\t\t{content}\n\t\t\t\t\t{link}\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t<span>Doots: {countedVotes[\"post\"][post.id] ? countedVotes[\"post\"][post.id] : 0}</span>\n\t\t\t\t\t<button name='up' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▲\n\t\t\t\t\t</button>\n\t\t\t\t\t<button name='down' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▼\n\t\t\t\t\t</button>\n\t\t\t\t\t{/* comments conditional */}\n\t\t\t\t\t<button onClick={e => this.commentOnPost(e)}>Comment</button>\n\t\t\t\t\t{commenting ? (\n\t\t\t\t\t\t<NewComment\n\t\t\t\t\t\t\tvariableKey={'post_id'}\n\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<button onClick={e => this.displayComments(e)}>Display Comments</button>\n\t\t\t\t\t<ul className='post-ul'>\n\t\t\t\t\t\t{this.state.displayComments && comments.length > 0\n\t\t\t\t\t\t\t? comments.map(comment => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\t\t\t\t\tcomments={comments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommenting={commenting}\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayComments={this.displayComments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t:\t\n\t\t<div className='post-card'>\n\t\t\t\t<div className='title-container'>{title}</div>\n\t\t\t\t<div className='contents-container'>\n\t\t\t\t<div className='post-img-container'>\n\t\t\t\t\t<img className='post-img' src={image} alt={title} />\n\t\t\t\t</div>\n\t\t\t\t<div className='content-container'>\n\t\t\t\t\t{content}\n\t\t\t\t\t{link}\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='button-container'>\n\t\t\t\t\t<span>Doots: {countedVotes[\"post\"][post.id] ? countedVotes[\"post\"][post.id] : 0}</span>\n\t\t\t\t\t<button name='up' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▲\n\t\t\t\t\t</button>\n\t\t\t\t\t<button name='down' onClick={e => this.rapidVoteIncrement(e)}>\n\t\t\t\t\t\t▼\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={e => this.commentOnPost(e)}>Comment</button>\n\t\t\t\t\t{commenting ? (\n\t\t\t\t\t\t<NewComment\n\t\t\t\t\t\t\tvariableKey={'post_id'}\n\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<button onClick={e => this.displayComments(e)}>Display Comments</button>\n\t\t\t\t\t<button onClick={e => this.renderModal()}>Enlarge Post</button>\n\t\t\t\t\t<ul className='post-ul'>\n\t\t\t\t\t\t{this.state.displayComments && comments.length > 0\n\t\t\t\t\t\t\t? comments.map(comment => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\t\t\t\tcomment={comment}\n\t\t\t\t\t\t\t\t\t\t\t\tcomments={comments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommenting={commenting}\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayComments={this.displayComments}\n\t\t\t\t\t\t\t\t\t\t\t\tcommentOnPost={this.commentOnPost}\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\t\t\t\t\tpost={post}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tcurrentUser: state.user.currentUser,\n\tvotes: state.votes.votes,\n\tcountedVotes: state.votes.voteCount\n})\n\nexport default connect(mapStateToProps, { createVote, voteCount })(Post);\n\n"]},"metadata":{},"sourceType":"module"}